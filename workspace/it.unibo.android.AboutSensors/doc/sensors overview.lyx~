#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass mwart
\begin_preamble
\usepackage{colortbl}
\definecolor{maroon}{rgb}{0.5,0,0}
\definecolor{darkgreen}{rgb}{0,0.5,0}
\definecolor{gray}{RGB}{192, 192, 192}
\lstdefinelanguage{XML}
{
  basicstyle=\ttfamily\footnotesize,
  morestring=[b]",
  moredelim=[s][\bfseries\color{darkgreen}]{<}{\ },
  moredelim=[s][\bfseries\color{darkgreen}]{</}{>},
  moredelim=[l][\bfseries\color{darkgreen}]{/>},
  moredelim=[l][\bfseries\color{darkgreen}]{>},
  morecomment=[s]{<?}{?>},
  morecomment=[s]{<!--}{-->},
  commentstyle=\color{maroon},
  stringstyle=\color{blue},
  identifierstyle=\color{magenta}
}
\end_preamble
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command bibtex8
\index_command default
\float_placement H
\paperfontsize 10
\spacing single
\use_hyperref true
\pdf_title "Android Sensors Overview"
\pdf_author "Carlo Antenucci"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref section
\pdf_pdfusetitle true
\papersize a4paper
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 3cm
\rightmargin 2cm
\bottommargin 2cm
\headheight 1cm
\headsep 1cm
\secnumdepth 3
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle headings
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict true
\end_header

\begin_body

\begin_layout Author
ALMA MATER STUDIORUM - UNIVERSITY OF BOLOGNA
\end_layout

\begin_layout Title
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{
\backslash
fill}
\end_layout

\end_inset


\size giant
Android Sensors Overview
\begin_inset Newline newline
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\size large
Carlo Antenucci
\size default

\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{
\backslash
fill}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage cleardoublepage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Abstract
Most Android-powered device have several built-in sensors that measure motion,
 orientation and other various enviromental condition, provide raw data
 with high precision and accuracy, and are useful to monitor three-dimensional
 device movement and positioning or monitor changes in the near ambiental
 environment near a device.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Abstract
Android platform supports three category of sensors:
\end_layout

\begin_layout Abstract

\series bold
Motion
\begin_inset space ~
\end_inset

sensors
\series default
: measure acceleration and rotational forces along three axis.
 This category includes 
\shape italic
accelerometer
\shape default
, g
\shape italic
ravity sensor
\shape default
, 
\shape italic
gyroscope
\shape default
 and 
\shape italic
rotational vector sensor
\shape default
.
\end_layout

\begin_layout Abstract

\series bold
Enviromental
\series default

\begin_inset space ~
\end_inset


\series bold
sensors
\series default
: sensors included in this category (
\shape italic
barometer
\shape default
, 
\shape italic
photometer
\shape default
 and 
\shape italic
thermometer
\shape default
) measure various enviromental parameters such as temperature, pressure,
 illumination, humidity.
\end_layout

\begin_layout Abstract
P
\series bold
osition
\begin_inset space ~
\end_inset

sensor
\series default
s: measure physical position of a device using 
\shape italic
orientation sensor 
\shape default
and 
\shape italic
magnetometer
\shape default
.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Abstract
The access to a sensor and the raw sensor data acquisition are simplified
 by using Android Sensor Framework
\series bold
 
\series default
that provides several classes and interfaces that helps developer to perform
 a large number of sensor-related task.
\end_layout

\begin_layout Abstract
This paper is based to the Adroid Developers sensors documentation
\begin_inset CommandInset citation
LatexCommand citet
key "androidDev"

\end_inset

 and introduces the Android sensor framework and explains how to use sensors
 using some examples.
\end_layout

\begin_layout Abstract
All source code are available at 
\begin_inset CommandInset href
LatexCommand href
target "https://github.com/CarloAntenucci/Android-Sensors-Overview.git"

\end_inset

 
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
About Android Sensor Framework
\end_layout

\begin_layout Subsection
Introduction to sensors
\end_layout

\begin_layout Standard
The Android Sensor Framework lets access to access many type of sensors,
 some of these are hardware-based (real sensors) and some are are software-based
 (virtual sensors).
\end_layout

\begin_layout Standard
Hardware-based sensors are built into the device and they derive data by
 directly measuring specific environmental properties, while software-based
 sensors are not physical devices despite they mimic an hardware-based sensor.
 This second group derive their data from one ore more of the hardware-based
 sensors.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Sensor types supported by the Android platform
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="3">
<features tabularvalignment="middle">
<column alignment="left" valignment="middle" width="30col%">
<column alignment="left" valignment="middle" width="10text%">
<column alignment="left" valignment="middle" width="50text%">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
rowcolor{cyan}
\end_layout

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\series bold
Sensor
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\series bold
Type
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\series bold
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
TYPE_ACCELEROMETER
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Hardware
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Measures the acceleration force in 
\begin_inset Formula $\nicefrac{m}{s^{2}}$
\end_inset

 that is applied to a device on all three physical axes (x, y, and z), including
 the force of gravity.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
TYPE_GRAVITY
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Software or Hardware
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Measures the force of gravity in 
\begin_inset Formula $\nicefrac{m}{s^{2}}$
\end_inset

 that is applied to a device on all three physical axes (x, y, and z).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
TYPE_GYROSCOPE
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Hardware
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Measures a device's rate of rotation in 
\begin_inset Formula $\nicefrac{rad}{s}$
\end_inset

 that is applied to a device on all three physical axes (x, y, and z).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
TYPE_LINEAR_ACCELERATION
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Software
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Measures the acceleration force in 
\begin_inset Formula $\nicefrac{m}{s^{2}}$
\end_inset

 that is applied to a device on all three physical axes (x, y, and z), excluding
 the force of gravity.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
TYPE_ORIENTATION
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Software
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Measures degrees of rotation that a device makes around all three physical
 axes (x, y, z).
 As of API level 3 you can obtain the inclination matrix and rotation matrix
 for a device by using the gravity sensor and the geomagnetic field sensor
 in conjunction with the getRotationMatrix() method.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
TYPE_ROTATION_VECTOR
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Software or Hardware
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Measures the orientation of a device by providing the three elements of
 the device's rotation vector.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
TYPE_AMBIENT_TEMPERATURE
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Hardware
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Measures the ambient room temperature in degrees Celsius (
\begin_inset Formula $\text{°C}$
\end_inset

).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
TYPE_LIGHT
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Hardware
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Measures the ambient illumination in lx.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
TYPE_PRESSURE
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Hardware
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Measures the ambient air pressure in 
\begin_inset Formula $hPa$
\end_inset

 or 
\begin_inset Formula $mbar$
\end_inset

.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
TYPE_RELATIVE_HUMIDITY
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Hardware
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Measures the ambient humidity in percent (
\begin_inset Formula $\%$
\end_inset

).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
TYPE_TEMPERATURE
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Hardware
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Measures the temperature of the device in degree Celsius (
\begin_inset Formula $\text{°C}$
\end_inset

).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
TYPE_MAGNETIC_FIELD
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Hardware
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Measures the ambient geomagnetic field for all three physical axes (x, y,
 z) in 
\begin_inset Formula $\mu T$
\end_inset

.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
TYPE_PROXIMITY
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Hardware
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Measures the proximity of an object in cm relative to the view screen of
 a device.
 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Sensor framework
\end_layout

\begin_layout Standard
Android sensor framework is part of the android.hardware package and includes
 classes and interfaces that allow developer to 
\end_layout

\begin_layout Itemize
Indentify sensors and sensor capabilities
\begin_inset Newline newline
\end_inset

useful for application with features that needs a specific sensor type or
 capabilities (identify all sensors that are present on a device and disable
 features that rely on sensors not present)
\end_layout

\begin_layout Itemize
Monitor sensor events
\begin_inset Newline newline
\end_inset

raw sensors data acquisition.
 Every time a sensor detects a change in the parameter that is measuring,
 notify this change using a sensor event that provides four different informatio
ns:
\end_layout

\begin_deeper
\begin_layout Itemize
Name of the sensor that triggered the event
\end_layout

\begin_layout Itemize
Timestamp of the event
\end_layout

\begin_layout Itemize
Accuracy of the event
\end_layout

\begin_layout Itemize
Raw data that triggered the event
\end_layout

\end_deeper
\begin_layout Standard
This tasks can be performed using the sensor-related APIs introduced by
 classes and interfaces included in Android sensor framewor:
\end_layout

\begin_layout Description

\family typewriter
\color black
SensorManager
\family default
 
\color inherit
This class creates an instance of the sensor service and provides methods
 to access and listens sensors, register and un register sensor listeners,
 acquire device orientation informations and also defines several sensors
 constants useful to report sensor accuracy, set data acquisition rates,
 and calibrate sensors.
\end_layout

\begin_layout Description

\family typewriter
\color black
Sensor
\family default
 This class is useful to create an instance of a specific sensor and provides
 various methods that determine sensor's capabilities.
\end_layout

\begin_layout Description

\family typewriter
\color black
SensorEvent
\family default
 Android uses this class to create a sensor event object which provides
 sensor event's informations such as raw sensor data, sensor type that generated
 the event, event accuracy and time stamp.
\end_layout

\begin_layout Description

\family typewriter
\color black
SensorEventListener
\family default
 
\color inherit
This interface is useful to create two callback methods that receive notificatio
n (a sensor event) when sensor values or sensor accuracy change.
\end_layout

\begin_layout Subsection
Sensor availability
\end_layout

\begin_layout Standard
Sensors availability is different within devices and is different too among
 Android versions because the Android sensors have been introduced in different
 platmorm releases.
\end_layout

\begin_layout Standard
Many sensors have been introduced by Android 1.5 Cupcake (API Level 3), but
 some were not implemented and not available until Android 2.3 Gingerbread
 (API Level 9) that introduces too new sensors.
 Other sensors were introduced by Android 4.0 Ice Cream Sandwich (API Level
 14) that also deprecates two sensors, replaced by newer and better sensors.
\end_layout

\begin_layout Standard
The following table summarize the availability of each sensor in each Android
 release.
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Sensor types supported by the Android platform
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="5">
<features tabularvalignment="middle">
<column alignment="left" valignment="middle" width="30col%">
<column alignment="left" valignment="middle" width="14text%">
<column alignment="left" valignment="middle" width="14text%">
<column alignment="left" valignment="middle" width="14text%">
<column alignment="left" valignment="middle" width="14text%">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
rowcolor{cyan}
\end_layout

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\series bold
Sensor
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\series bold
Android 4 
\end_layout

\begin_layout Plain Layout

\series bold
Ice Cream Sandwich
\end_layout

\begin_layout Plain Layout
(API Level 14)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\series bold
Android 2.3
\end_layout

\begin_layout Plain Layout

\series bold
Gingerbread
\end_layout

\begin_layout Plain Layout
(API Level 9)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\series bold
Android 2.2 
\end_layout

\begin_layout Plain Layout

\series bold
Froyo
\end_layout

\begin_layout Plain Layout
(API Level 8)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\series bold
Android 1.5
\end_layout

\begin_layout Plain Layout

\series bold
Cupcake
\end_layout

\begin_layout Plain Layout
(API Level 3)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
TYPE_ACCELEROMETER
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
YES
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
YES
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
YES
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
YES
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
TYPE_GRAVITY
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
YES
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
YES
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n/a
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n/a
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
TYPE_GYROSCOPE
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
YES
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
YES
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n/a
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Added in Android 1.5 (API Level 3), but not available untin Android 2.3 (API
 Level 9).
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n/a
\begin_inset script superscript

\begin_layout Plain Layout
a
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
TYPE_LINEAR_ACCELERATION
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
YES
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
YES
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n/a
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n/a
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
TYPE_ORIENTATION
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
YES
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Sensor available but deprecated
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
YES
\begin_inset script superscript

\begin_layout Plain Layout
b
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
YES
\begin_inset script superscript

\begin_layout Plain Layout
b
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
YES
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
TYPE_ROTATION_VECTOR
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
YES
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
YES
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n/a
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n/a
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
TYPE_AMBIENT_TEMPERATURE
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
YES
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n/a
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n/a
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n/a
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
TYPE_LIGHT
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
YES
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
YES
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
YES
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
YES
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
TYPE_PRESSURE
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
YES
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
YES
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n/a
\begin_inset script superscript

\begin_layout Plain Layout
a
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n/a
\begin_inset script superscript

\begin_layout Plain Layout
a
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
TYPE_RELATIVE_HUMIDITY
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
YES
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n/a
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n/a
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
n/a
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
TYPE_TEMPERATURE
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
YES
\begin_inset script superscript

\begin_layout Plain Layout
b
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
YES
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
YES
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
YES
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
TYPE_MAGNETIC_FIELD
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
YES
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
YES
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
YES
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
YES
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
TYPE_PROXIMITY
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
YES
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
YES
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
YES
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
YES
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Subsection
Sensor coordinate system
\end_layout

\begin_layout Standard

\color black
Generally the sensor framework uses a standard 3-axis coordinate system
 to express data values.
\end_layout

\begin_layout Standard

\color black
X, Y and Z values are represented respectively by 
\family typewriter
values[0]
\family default
, 
\family typewriter
values[1]
\family default
 and 
\family typewriter
values[2]
\family default
 of 
\family typewriter
\size small
SensorEvent
\family default
\size default
 object.
 Some sensors, such as proximity sensor, light sensor, pressure sensor and
 temperature sensor, provides single values represented by the only 
\family typewriter
values[0]
\family default
.
\end_layout

\begin_layout Standard

\color black
For 
\family typewriter
TYPE_ACCELEROMETER
\family default
, 
\family typewriter
TYPE_GRAVITY
\family default
, 
\family typewriter
TYPE_GYROSCOPE
\family default
, 
\family typewriter
TYPE_LINEAR_ACCELERATION
\family default
 and 
\family typewriter
TYPE_MAGNETIC_FIELD
\family default
 the sensors the coordinate system is defined relatively to the device's
 screen when the device in held in its default orientation (portrait for
 smartphones, landscape for many tablet).
 When the device is in its default orientation the X axis is horizontal
 and points to the right, the Y axis is vertical and points up and the Z
 axis points toward the outside of the screen face.
\end_layout

\begin_layout Standard

\color black
The most important thing to understand is that the axes are not swapped
 when the device screen orientation changes.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Sensor coordinate system
\begin_inset CommandInset citation
LatexCommand cite
key "intelDev"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Sensor coordinate system for smartphone
\end_layout

\end_inset


\begin_inset Graphics
	filename img/SensorCoordinateSystemSmartphone.png
	lyxscale 30
	width 30page%

\end_inset


\end_layout

\end_inset


\begin_inset space \hspace{}
\length 5page%
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Sensor coordinate system for tablet
\end_layout

\end_inset


\begin_inset Graphics
	filename img/SensorCoordinateSystemTablet.png
	lyxscale 30
	width 30page%

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\color black
Identifying sensors and sensor capabilities
\end_layout

\begin_layout Standard

\color black
The Android sensor framework provides several methods that make it easy
 determine at runtime which sensors are on a device and the capabilities
 of each sensor, such as maximum range, resolution, power requirements,
 minimum delay and vendor.
\end_layout

\begin_layout Standard

\color black
First of all, to identify the sensors on a device, is necessary to obtain
 a reference to the sensor service by creating an instance of the 
\family typewriter
\size small
SensorManager
\family default
\size default
 class by calling the 
\family typewriter
getSystemService()
\family default
 method using the 
\family typewriter
SENSOR_SERVICE
\family default
 as parameter:
\end_layout

\begin_layout Standard
\align center

\color black
\begin_inset Box ovalbox
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "77page%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout LyX-Code

\color black
\begin_inset listings
lstparams "basicstyle={\footnotesize\sffamily},comment={[l]{//}},commentstyle={\color{darkgreen}\ttfamily},emph={int, boolean, int, float, double, List,  Sensor, SensorManager, Context},emphstyle={\color{blue}},identifierstyle={\color{black}},keywords={typeof, new, true, false, catch, function, return, null, catch, switch, var, if, in, while, do, else, case, break, int, long, this, new},keywordstyle={\color{magenta}\bfseries},language=Java,morecomment={[s]{/*}{*/}},ndkeywords={class, export, throw, implements, import, this},ndkeywordstyle={\color{darkgray}\bfseries},sensitive=false,stringstyle={\color{red}\ttfamily},tabsize=4"
inline false
status open

\begin_layout LyX-Code

private SensorManager mSensorManager;
\end_layout

\begin_layout LyX-Code

mSensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

\color black
Now, calling the
\family typewriter
\series bold
 
\series default
getSensorList()
\family default
 method and using 
\family typewriter
TYPE_ALL
\family default
 constant as parameter, 
\family typewriter
\size small
SensorManager
\family default
\size default
 returns the list of every sensor on the device:
\end_layout

\begin_layout Standard
\align center

\color black
\begin_inset Box ovalbox
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "77page%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout LyX-Code

\color black
\begin_inset listings
lstparams "basicstyle={\footnotesize\sffamily},comment={[l]{//}},commentstyle={\color{darkgreen}\ttfamily},emph={int, boolean, int, float, double, List,  Sensor, SensorManager, Context},emphstyle={\color{blue}},identifierstyle={\color{black}},keywords={typeof, new, true, false, catch, function, return, null, catch, switch, var, if, in, while, do, else, case, break, int, long, this, new},keywordstyle={\color{magenta}\bfseries},language=Java,morecomment={[s]{/*}{*/}},ndkeywords={class, export, throw, implements, import, this},ndkeywordstyle={\color{darkgray}\bfseries},sensitive=false,stringstyle={\color{red}\ttfamily},tabsize=4"
inline false
status open

\begin_layout LyX-Code

List<Sensor> deviceSensors = mSensorManager.getSensorList(Sensor.TYPE_ALL);
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

\color black
Using, instead of 
\family typewriter
TYPE_ALL
\family default
 constant, another constant provided by 
\family typewriter
\size small
Sensor
\family default
\size default
 class such as 
\family typewriter
TYPE_GYROSCOPE
\family default
, 
\family typewriter
TYPE_LINEAR_ACCELERATION
\family default
, 
\family typewriter
TYPE_GRAVITY
\family default
 etc.
 
\family typewriter
\size small
SensorManager
\family default
\size default
 class returns a lists all sensors of the given type.
\end_layout

\begin_layout Standard

\color black
Is also possible determine if a specific type of sensor exists on a device
 by using the 
\family typewriter
getDefaultSensor()
\family default
 method with the sensor type constant as parameter.
 If a device has more then one sensor for the given type, one of its must
 be designed as the default sensor and if the default sensor does not exist,
 the method returns null (which means that the device does not have thay
 type of sensor).
 The following code checks if there is an accelerometer on the device:
\end_layout

\begin_layout Standard
\align center
\begin_inset Box ovalbox
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "77page%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout LyX-Code
\begin_inset listings
lstparams "basicstyle={\footnotesize\sffamily},comment={[l]{//}},commentstyle={\color{darkgreen}\ttfamily},emph={int, boolean, int, float, double, Sensor, SensorManager, Context},emphstyle={\color{blue}},identifierstyle={\color{black}},keywords={typeof, new, true, false, catch, function, return, null, catch, switch, var, if, in, while, do, else, case, break, int, long, this, new},keywordstyle={\color{magenta}\bfseries},language=Java,morecomment={[s]{/*}{*/}},ndkeywords={class, export, throw, implements, import, this},ndkeywordstyle={\color{darkgray}\bfseries},sensitive=false,stringstyle={\color{red}\ttfamily},tabsize=4"
inline false
status open

\begin_layout LyX-Code

private SensorManager mSensorManager;
\end_layout

\begin_layout LyX-Code

...
\end_layout

\begin_layout LyX-Code

mSensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);
\end_layout

\begin_layout LyX-Code

if ( mSensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER) != null )
 {
\end_layout

\begin_layout LyX-Code

	// Success! There's an accelerometer.
\end_layout

\begin_layout LyX-Code

}
\end_layout

\begin_layout LyX-Code

else{
\end_layout

\begin_layout LyX-Code

	// Failure! No accelerometer.
\end_layout

\begin_layout LyX-Code

}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center

\end_layout

\begin_layout Standard
In addition to listing the sensors on a device, in possible, using public
 methods of Sensor class, determine capabilities and attributes of each
 sensor.
 This is useful if an application can have different behavior depending
 on sensors, or sensor capabilities, available on a device.
 With this methods is possible to obtain sensor's resolution and maximum
 range of measurement (using 
\family typewriter
getResolution()
\family default
 and 
\family typewriter
getMaximumRange()
\family default
) or sensor's power requirement with 
\family typewriter
getPower()
\family default
 method; other two methods particularly useful to optimize an application
 for different manufacturer's sensors or different sensors' version are
\family typewriter
 getVendor()
\family default
 -for the manufacturer- and 
\family typewriter
getVersion()
\family default
 -to obtain sensor's version-.
\end_layout

\begin_layout Standard
The following sample code shows how to use 
\family typewriter
getVendor()
\family default
 and 
\family typewriter
getVersion()
\family default
 methods to optimize an application using gravity sensor if its vendor is
 
\shape slanted
Google Inc.

\shape default
 and its version is 
\shape slanted
3
\shape default
, if that particular sensor is not present on device the application try
 to use the accelerometer:
\end_layout

\begin_layout Standard
Another useful methods is the 
\family typewriter
getMinDelay()
\family default
 which returns the minimum time interval (in microseconds) between two data
 sensed by a sensor.
 Any sensor that returns a 
\shape italic
non-zero
\shape default
 value is a streaming sensor -this type of sensors sense data at regular
 intervals and were introduced by Android 2.3 Gingerbread (API Level 9)-
 while if a sensor returns zero, it means that the sensor is not streaming
 sensor, and it reports data only when there is a chenge in the paremeter
 it is sensing.
 This method is useful because using it in possible to determine the maximum
 rate at which a sensor can acquire data.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Paragraph
Sensors identification code
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
This app is available on github in AboutSensors project
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The following code realize an Android application that lists all sensors
 in a device and its own properties.
 Some methods were not introduced until API Level 9, so it works on Android
 2.3 (Gingerbread) or latest.
\end_layout

\begin_layout Standard
The layout file (
\family typewriter
\color black
res/layout/activity_about_sensors.xml
\family default
\color inherit
) defines the Android widgets used, their ID and their properties (position,
 dimensions, alignment, etc.).
 In this application is needed a 
\family typewriter
\color black
Spinner
\family default
\color inherit
 to select which is the sensor to be inspected and a 
\family typewriter
\color black
TableLayout
\family default
\color inherit
 that contains a row for each property and every row contains two 
\family typewriter
\color black
TextView
\family default
\color inherit
 (a label and a value field).
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box ovalbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout
\begin_inset space \qquad{}
\end_inset


\family typewriter
\shape slanted
\color black
activity_about_sensors.xml
\end_layout

\begin_layout Plain Layout
\begin_inset listings
lstparams "basicstyle={\footnotesize\sffamily},breaklines=true,language=XML,lastline=67,tabsize=4"
inline false
status open

\begin_layout Plain Layout

<?xml version="1.0" encoding="utf-8"?>
\end_layout

\begin_layout Plain Layout

<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
\end_layout

\begin_layout Plain Layout

    android:layout_width="match_parent"
\end_layout

\begin_layout Plain Layout

    android:layout_height="match_parent" >
\end_layout

\begin_layout Plain Layout

    <Spinner
\end_layout

\begin_layout Plain Layout

        android:id="@+id/spinner_sensors"
\end_layout

\begin_layout Plain Layout

        android:layout_width="wrap_content"
\end_layout

\begin_layout Plain Layout

        android:layout_height="wrap_content"
\end_layout

\begin_layout Plain Layout

        android:layout_alignParentLeft="true"
\end_layout

\begin_layout Plain Layout

        android:layout_alignParentTop="true" />
\end_layout

\begin_layout Plain Layout

    <TableLayout
\end_layout

\begin_layout Plain Layout

        android:layout_width="wrap_content"
\end_layout

\begin_layout Plain Layout

        android:layout_height="wrap_content"
\end_layout

\begin_layout Plain Layout

        android:layout_alignParentLeft="true"
\end_layout

\begin_layout Plain Layout

        android:layout_alignParentRight="true"
\end_layout

\begin_layout Plain Layout

        android:layout_below="@+id/spinner_sensors" >
\end_layout

\begin_layout Plain Layout

        <TableRow
\end_layout

\begin_layout Plain Layout

            android:id="@+id/tableRowVersion"
\end_layout

\begin_layout Plain Layout

            android:layout_width="wrap_content"
\end_layout

\begin_layout Plain Layout

            android:layout_height="wrap_content" >
\end_layout

\begin_layout Plain Layout

            <TextView
\end_layout

\begin_layout Plain Layout

               android:id="@+id/labelVersion"
\end_layout

\begin_layout Plain Layout

                android:layout_width="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:layout_height="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:text="Version: "
\end_layout

\begin_layout Plain Layout

                android:textAppearance="?android:attr/textAppearanceMedium"
 />
\end_layout

\begin_layout Plain Layout

            <TextView
\end_layout

\begin_layout Plain Layout

                android:id="@+id/valueVersion"
\end_layout

\begin_layout Plain Layout

                android:layout_width="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:layout_height="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:text=""
\end_layout

\begin_layout Plain Layout

                android:textAppearance="?android:attr/textAppearanceMedium"
 />
\end_layout

\begin_layout Plain Layout

        </TableRow>
\end_layout

\begin_layout Plain Layout

        <TableRow
\end_layout

\begin_layout Plain Layout

            android:id="@+id/tableRowVendor"
\end_layout

\begin_layout Plain Layout

            android:layout_width="wrap_content"
\end_layout

\begin_layout Plain Layout

            android:layout_height="wrap_content" >
\end_layout

\begin_layout Plain Layout

            <TextView
\end_layout

\begin_layout Plain Layout

                android:id="@+id/labelVendor"
\end_layout

\begin_layout Plain Layout

                android:layout_width="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:layout_height="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:text="Vendor: "
\end_layout

\begin_layout Plain Layout

                android:textAppearance="?android:attr/textAppearanceMedium"
 />
\end_layout

\begin_layout Plain Layout

            <TextView
\end_layout

\begin_layout Plain Layout

                android:id="@+id/valueVendor"
\end_layout

\begin_layout Plain Layout

                android:layout_width="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:layout_height="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:text=""
\end_layout

\begin_layout Plain Layout

                android:textAppearance="?android:attr/textAppearanceMedium"
 />
\end_layout

\begin_layout Plain Layout

        </TableRow>
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box ovalbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout
\begin_inset listings
lstparams "basicstyle={\footnotesize\sffamily},breaklines=true,language=XML,tabsize=4"
inline false
status open

\begin_layout Plain Layout

    	<TableRow
\end_layout

\begin_layout Plain Layout

            android:id="@+id/tableRowPower"
\end_layout

\begin_layout Plain Layout

            android:layout_width="wrap_content"
\end_layout

\begin_layout Plain Layout

            android:layout_height="wrap_content" >
\end_layout

\begin_layout Plain Layout

            <TextView
\end_layout

\begin_layout Plain Layout

                android:id="@+id/labelPower"
\end_layout

\begin_layout Plain Layout

                android:layout_width="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:layout_height="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:text="Power: "
\end_layout

\begin_layout Plain Layout

                android:textAppearance="?android:attr/textAppearanceMedium"
 />
\end_layout

\begin_layout Plain Layout

            <TextView
\end_layout

\begin_layout Plain Layout

                android:id="@+id/valuePower"
\end_layout

\begin_layout Plain Layout

                android:layout_width="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:layout_height="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:text=""
\end_layout

\begin_layout Plain Layout

                android:textAppearance="?android:attr/textAppearanceMedium"
 />
\end_layout

\begin_layout Plain Layout

        </TableRow>    
\end_layout

\begin_layout Plain Layout

		<TableRow
\end_layout

\begin_layout Plain Layout

            android:id="@+id/tableRowMaxRange"
\end_layout

\begin_layout Plain Layout

            android:layout_width="wrap_content"
\end_layout

\begin_layout Plain Layout

            android:layout_height="wrap_content" >
\end_layout

\begin_layout Plain Layout

            <TextView
\end_layout

\begin_layout Plain Layout

                android:id="@+id/labelMaxRange"
\end_layout

\begin_layout Plain Layout

                android:layout_width="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:layout_height="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:text="Maximum Range: "
\end_layout

\begin_layout Plain Layout

                android:textAppearance="?android:attr/textAppearanceMedium"
 />
\end_layout

\begin_layout Plain Layout

            <TextView
\end_layout

\begin_layout Plain Layout

                android:id="@+id/valueMaxRange"
\end_layout

\begin_layout Plain Layout

                android:layout_width="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:layout_height="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:text=""
\end_layout

\begin_layout Plain Layout

                android:textAppearance="?android:attr/textAppearanceMedium"
 />
\end_layout

\begin_layout Plain Layout

        </TableRow>
\end_layout

\begin_layout Plain Layout

        <TableRow
\end_layout

\begin_layout Plain Layout

            android:id="@+id/tableRowResolution"
\end_layout

\begin_layout Plain Layout

            android:layout_width="wrap_content"
\end_layout

\begin_layout Plain Layout

            android:layout_height="wrap_content" >
\end_layout

\begin_layout Plain Layout

            <TextView
\end_layout

\begin_layout Plain Layout

                android:id="@+id/labelResolution"
\end_layout

\begin_layout Plain Layout

                android:layout_width="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:layout_height="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:text="Resolution: "
\end_layout

\begin_layout Plain Layout

                android:textAppearance="?android:attr/textAppearanceMedium"
 />
\end_layout

\begin_layout Plain Layout

            <TextView
\end_layout

\begin_layout Plain Layout

                android:id="@+id/valueResolution"
\end_layout

\begin_layout Plain Layout

                android:layout_width="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:layout_height="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:text=""
\end_layout

\begin_layout Plain Layout

                android:textAppearance="?android:attr/textAppearanceMedium"
 />
\end_layout

\begin_layout Plain Layout

        </TableRow>
\end_layout

\begin_layout Plain Layout

        <TableRow
\end_layout

\begin_layout Plain Layout

            android:id="@+id/tableRowMinDelay"
\end_layout

\begin_layout Plain Layout

            android:layout_width="wrap_content"
\end_layout

\begin_layout Plain Layout

            android:layout_height="wrap_content" >
\end_layout

\begin_layout Plain Layout

            <TextView
\end_layout

\begin_layout Plain Layout

                android:id="@+id/labelMinDelay"
\end_layout

\begin_layout Plain Layout

                android:layout_width="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:layout_height="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:text="Minimum Delay: "
\end_layout

\begin_layout Plain Layout

                android:textAppearance="?android:attr/textAppearanceMedium"
 />
\end_layout

\begin_layout Plain Layout

            <TextView
\end_layout

\begin_layout Plain Layout

                android:id="@+id/valueMinDelay"
\end_layout

\begin_layout Plain Layout

                android:layout_width="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:layout_height="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:text=""
\end_layout

\begin_layout Plain Layout

                android:textAppearance="?android:attr/textAppearanceMedium"
 />
\end_layout

\begin_layout Plain Layout

        </TableRow>
\end_layout

\begin_layout Plain Layout

   </TableLayout>
\end_layout

\begin_layout Plain Layout

</RelativeLayout> 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
The activity code is really simple: when Android system creates the activity
 (
\family typewriter
onCreate()
\family default
 method), the first thing to do is the initialization of resources.
 The 
\family typewriter
initializeResources()
\family default
 method assigns to each field its resource referenced in layout file, creates
 the 
\family typewriter
Spinner
\family default
's 
\family typewriter
ArrayAdapter
\family default
 with sensors' names and call the 
\family typewriter
addSpinnerListener()
\family default
 method that assigns to the 
\family typewriter
Spinner
\family default
 a new 
\family typewriter
onItemSelectedListener
\family default
 that changes the shown values with the sensor selected values.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box ovalbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout
\begin_inset space \qquad{}
\end_inset


\family typewriter
\shape slanted
\color black
AboutSensors.java
\end_layout

\begin_layout Plain Layout
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily},breaklines=true,comment={[l]{//}},commentstyle={\color{darkgreen}\ttfamily},emph={int, boolean, int, float, double, List,  Sensor, SensorManager, Context, Bundle, ArrayList, Activity, View, AdapterView, OnItemSelectedListener, ArrayAdapter, Spinner, TextView},emphstyle={\color{blue}},identifierstyle={\color{black}},keywords={typeof, new, true, false, catch, function, return, null, catch, switch, var, if, in, while, do, else, case, break, int, long, this, new},keywordstyle={\color{magenta}\bfseries},language=Java,lastline=67,morecomment={[s]{/*}{*/}},ndkeywords={class, export, @Override},ndkeywordstyle={\color{gray}\bfseries},sensitive=false,stringstyle={\color{red}\ttfamily},tabsize=4"
inline false
status open

\begin_layout Plain Layout

package it.unibo.android.aboutSensors;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

import java.util.ArrayList;
\end_layout

\begin_layout Plain Layout

import java.util.List;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

import android.app.Activity;
\end_layout

\begin_layout Plain Layout

import android.hardware.Sensor;
\end_layout

\begin_layout Plain Layout

import android.hardware.SensorManager;
\end_layout

\begin_layout Plain Layout

import android.os.Bundle;
\end_layout

\begin_layout Plain Layout

import android.view.View;
\end_layout

\begin_layout Plain Layout

import android.widget.AdapterView;
\end_layout

\begin_layout Plain Layout

import android.widget.AdapterView.OnItemSelectedListener;
\end_layout

\begin_layout Plain Layout

import android.widget.ArrayAdapter;
\end_layout

\begin_layout Plain Layout

import android.widget.Spinner;
\end_layout

\begin_layout Plain Layout

import android.widget.TextView;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

public class AboutSensors extends Activity {
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	//fields definition
\end_layout

\begin_layout Plain Layout

	private Spinner spinnerList;
\end_layout

\begin_layout Plain Layout

	private SensorManager manager;
\end_layout

\begin_layout Plain Layout

	private List<Sensor> sensors;
\end_layout

\begin_layout Plain Layout

	private Sensor sensorSelected;
\end_layout

\begin_layout Plain Layout

	private ArrayAdapter<String> adapter;
\end_layout

\begin_layout Plain Layout

	private TextView textVersion;
\end_layout

\begin_layout Plain Layout

	private TextView textVendor;
\end_layout

\begin_layout Plain Layout

	private TextView textPower;
\end_layout

\begin_layout Plain Layout

	private TextView textMaxRange;
\end_layout

\begin_layout Plain Layout

	private TextView textResolution;
\end_layout

\begin_layout Plain Layout

	private TextView textMinDelay;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	@Override
\end_layout

\begin_layout Plain Layout

	protected void onCreate(Bundle savedInstanceState) {
\end_layout

\begin_layout Plain Layout

		super.onCreate(savedInstanceState);
\end_layout

\begin_layout Plain Layout

		//set the default layout
\end_layout

\begin_layout Plain Layout

		setContentView(R.layout.activity_about_sensors);
\end_layout

\begin_layout Plain Layout

		//initialize the resources
\end_layout

\begin_layout Plain Layout

		initializeResources();
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	private void initializeResources() {
\end_layout

\begin_layout Plain Layout

		//obtain the SensorManager instance and get the sensors list
\end_layout

\begin_layout Plain Layout

		manager = (SensorManager) getSystemService(SENSOR_SERVICE);
\end_layout

\begin_layout Plain Layout

		sensors = manager.getSensorList(Sensor.TYPE_ALL);
\end_layout

\begin_layout Plain Layout

		//get the TextView where put the sensor information
\end_layout

\begin_layout Plain Layout

		textVersion = (TextView)findViewById(R.id.valueVersion);
\end_layout

\begin_layout Plain Layout

		textVendor = (TextView)findViewById(R.id.valueVendor);
\end_layout

\begin_layout Plain Layout

		textPower = (TextView)findViewById(R.id.valuePower);
\end_layout

\begin_layout Plain Layout

		textMaxRange = (TextView)findViewById(R.id.valueMaxRange);
\end_layout

\begin_layout Plain Layout

		textResolution = (TextView)findViewById(R.id.valueResolution);
\end_layout

\begin_layout Plain Layout

		textMinDelay = (TextView)findViewById(R.id.valueMinDelay);
\end_layout

\begin_layout Plain Layout

		//get the spinner
\end_layout

\begin_layout Plain Layout

		spinnerList = (Spinner)findViewById(R.id.spinner_sensors);
\end_layout

\begin_layout Plain Layout

		//set up the spinner adapter with sensors names
\end_layout

\begin_layout Plain Layout

		adapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item,
 
\end_layout

\begin_layout Plain Layout

											getSensorsNames());
\end_layout

\begin_layout Plain Layout

		adapter.setDropDownViewResource(android.R.layout.simple_dropdown_item_1line);
\end_layout

\begin_layout Plain Layout

		spinnerList.setAdapter(adapter);
\end_layout

\begin_layout Plain Layout

		//add the spinner listener
\end_layout

\begin_layout Plain Layout

		addSpinnerListener(); 		
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box ovalbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily},breaklines=true,comment={[l]{//}},commentstyle={\color{darkgreen}\ttfamily},emph={int, boolean, int, float, double, List,  Sensor, SensorManager, Context, Bundle, ArrayList, Activity, View, AdapterView, OnItemSelectedListener, ArrayAdapter, Spinner, TextView},emphstyle={\color{blue}},identifierstyle={\color{black}},keywords={typeof, new, true, false, catch, function, return, null, catch, switch, var, if, in, while, do, else, case, break, int, long, this, new},keywordstyle={\color{magenta}\bfseries},language=Java,lastline=67,morecomment={[s]{/*}{*/}},ndkeywords={class, export, @override},ndkeywordstyle={\color{gray}\bfseries},sensitive=false,stringstyle={\color{red}\ttfamily},tabsize=4"
inline false
status open

\begin_layout Plain Layout

	private void addSpinnerListener() {
\end_layout

\begin_layout Plain Layout

		spinnerList.setOnItemSelectedListener(new OnItemSelectedListener(){
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		@Override
\end_layout

\begin_layout Plain Layout

			public void onItemSelected(AdapterView<?> parent, View view, 
\end_layout

\begin_layout Plain Layout

										int position, long id) {
\end_layout

\begin_layout Plain Layout

				//when an item is selected update the text view 
\end_layout

\begin_layout Plain Layout

				//with the selected sensor's informations
\end_layout

\begin_layout Plain Layout

				Sensor s = sensors.get(position);
\end_layout

\begin_layout Plain Layout

				if(s != sensorSelected){
\end_layout

\begin_layout Plain Layout

					System.out.println(s.toString());
\end_layout

\begin_layout Plain Layout

					textVersion.setText(""+s.getVersion());
\end_layout

\begin_layout Plain Layout

					textVendor.setText(""+s.getVendor());
\end_layout

\begin_layout Plain Layout

					textPower.setText(s.getPower()+" mA");
\end_layout

\begin_layout Plain Layout

					textMaxRange.setText(""+s.getMaximumRange());
\end_layout

\begin_layout Plain Layout

					textResolution.setText(""+s.getResolution());
\end_layout

\begin_layout Plain Layout

					textMinDelay.setText(s.getMinDelay()/1000+" ms");
\end_layout

\begin_layout Plain Layout

					sensorSelected = s;
\end_layout

\begin_layout Plain Layout

				}
\end_layout

\begin_layout Plain Layout

			}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

			@Override
\end_layout

\begin_layout Plain Layout

			public void onNothingSelected(AdapterView<?> parent) {
\end_layout

\begin_layout Plain Layout

				textVersion.setText(""); 
\end_layout

\begin_layout Plain Layout

				textVendor.setText("");
\end_layout

\begin_layout Plain Layout

			}		
\end_layout

\begin_layout Plain Layout

		});
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	private List<String> getSensorsNames() {
\end_layout

\begin_layout Plain Layout

		//returns the list that contains the names of all available sensors
\end_layout

\begin_layout Plain Layout

		List<String> sensorNames = new ArrayList<String>();
\end_layout

\begin_layout Plain Layout

		for (Sensor s: sensors)
\end_layout

\begin_layout Plain Layout

			sensorNames.add(s.getName());
\end_layout

\begin_layout Plain Layout

		return sensorNames;
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Monitoring sensor events
\end_layout

\begin_layout Standard
SensorEventListener interface introduces two callback methods which must
 be implemented to monitor raw sensor data.
 This methods are 
\family typewriter
onAccuracyChanged()
\family default
 and 
\family typewriter
onSensorChanged()
\family default
.
\end_layout

\begin_layout Standard
This two methods are invoked by Android system, the first whenever the sensor's
 accuracy changes (this method provides the reference to the 
\family typewriter
Sensor
\family default
 object that changed and its new accuracy, whose state is represented by
 one of four constants defined in 
\family typewriter
SensorManager
\family default
 class:
\end_layout

\begin_layout Itemize

\family typewriter
SENSOR_STATUS_ACCURACY_LOW
\end_layout

\begin_layout Itemize

\family typewriter
SENSOR_STATUS_ACCURACY_MEDIUM
\end_layout

\begin_layout Itemize

\family typewriter
SENSOR_STATUS_ACCURACY_HIGH
\end_layout

\begin_layout Itemize

\family typewriter
SENSOR_STATUS_ACCURACY_UNRELIABLE
\end_layout

\begin_layout Standard
The 
\family typewriter
onSensorChanged()
\family default
 method, insted, is invoked by system when a sensor reports a new value.
 This method provides a new 
\family typewriter
SensorEvent
\family default
 object that contains informations about the new sensor data (the new data
 recorded by the sensor, its accuracy, the sensor which generates the new
 data and the relative timestamp).
\end_layout

\begin_layout Paragraph
Sensor events code
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
This app is available on github in the project AboutSensorEvents
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The following code is based on AboutSensors project.
 In this application is shown, with the previous informations, the raw sensor
 data, received by the selected sensor.
\end_layout

\begin_layout Standard
In layout file (
\family typewriter
\color black
res/layout/activity_about_sensor_events.xml
\family default
\color inherit
) above the sensor informations table is defined a new table that contains
 3 rows with 3 labels and 3 
\family typewriter
TextView
\family default
, one for each axes value (X, Y and Z).
 The following code shown only the difference between the previous and the
 new layout.
 
\end_layout

\begin_layout Standard
This part of code begins after the 
\begin_inset listings
lstparams "basicstyle={\small\ttfamily},language=XML"
inline true
status open

\begin_layout Plain Layout

</TableLayout>
\end_layout

\end_inset

 tag.
\end_layout

\begin_layout Standard
\begin_inset Box ovalbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout
\begin_inset space \qquad{}
\end_inset


\family typewriter
\shape slanted
\color black
activity_about_sensor_events.xml
\end_layout

\begin_layout Plain Layout
\begin_inset listings
lstparams "basicstyle={\footnotesize\sffamily},breaklines=true,language=XML,lastline=67,tabsize=4"
inline false
status open

\begin_layout Plain Layout

    <TextView
\end_layout

\begin_layout Plain Layout

        android:id="@+id/LabelSensorData"
\end_layout

\begin_layout Plain Layout

        android:layout_width="wrap_content"
\end_layout

\begin_layout Plain Layout

        android:layout_height="wrap_content"
\end_layout

\begin_layout Plain Layout

        android:layout_alignParentLeft="false"
\end_layout

\begin_layout Plain Layout

        android:layout_alignParentRight="false"
\end_layout

\begin_layout Plain Layout

        android:layout_below="@+id/tableLayout1"
\end_layout

\begin_layout Plain Layout

        android:layout_centerHorizontal="true"
\end_layout

\begin_layout Plain Layout

        android:text="Sensor Data:"
\end_layout

\begin_layout Plain Layout

        android:textAppearance="?android:attr/textAppearanceLarge" />
\end_layout

\begin_layout Plain Layout

    <TableLayout
\end_layout

\begin_layout Plain Layout

        android:id="@+id/SensorData"
\end_layout

\begin_layout Plain Layout

        android:layout_width="wrap_content"
\end_layout

\begin_layout Plain Layout

        android:layout_height="wrap_content"
\end_layout

\begin_layout Plain Layout

        android:layout_alignParentLeft="true"
\end_layout

\begin_layout Plain Layout

        android:layout_alignParentRight="true"
\end_layout

\begin_layout Plain Layout

        android:layout_below="@+id/LabelSensorData" >
\end_layout

\begin_layout Plain Layout

        <TableRow
\end_layout

\begin_layout Plain Layout

            android:id="@+id/SensorDataX"
\end_layout

\begin_layout Plain Layout

            android:layout_width="wrap_content" 
\end_layout

\begin_layout Plain Layout

            android:layout_height="wrap_content" >
\end_layout

\begin_layout Plain Layout

            <TextView
\end_layout

\begin_layout Plain Layout

                android:id="@+id/LabelDataX"
\end_layout

\begin_layout Plain Layout

                android:layout_width="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:layout_height="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:text="SensorDataX: "
\end_layout

\begin_layout Plain Layout

                android:textAppearance="?android:attr/textAppearanceMedium"
 />
\end_layout

\begin_layout Plain Layout

            <TextView
\end_layout

\begin_layout Plain Layout

                android:id="@+id/ValueDataX"
\end_layout

\begin_layout Plain Layout

                android:layout_width="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:layout_height="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:textAppearance="?android:attr/textAppearanceMedium"
 />
\end_layout

\begin_layout Plain Layout

        </TableRow>
\end_layout

\begin_layout Plain Layout

		<TableRow
\end_layout

\begin_layout Plain Layout

            android:id="@+id/SensorDataY"
\end_layout

\begin_layout Plain Layout

            android:layout_width="wrap_content" 
\end_layout

\begin_layout Plain Layout

            android:layout_height="wrap_content" >
\end_layout

\begin_layout Plain Layout

            <TextView
\end_layout

\begin_layout Plain Layout

                android:id="@+id/LabelDataY"
\end_layout

\begin_layout Plain Layout

                android:layout_width="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:layout_height="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:text="SensorDataY: "
\end_layout

\begin_layout Plain Layout

                android:textAppearance="?android:attr/textAppearanceMedium"
 />
\end_layout

\begin_layout Plain Layout

            <TextView
\end_layout

\begin_layout Plain Layout

                android:id="@+id/ValueDataY"
\end_layout

\begin_layout Plain Layout

                android:layout_width="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:layout_height="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:textAppearance="?android:attr/textAppearanceMedium"
 />
\end_layout

\begin_layout Plain Layout

        </TableRow>
\end_layout

\begin_layout Plain Layout

		<TableRow
\end_layout

\begin_layout Plain Layout

            android:id="@+id/SensorDataZ"
\end_layout

\begin_layout Plain Layout

            android:layout_width="wrap_content" 
\end_layout

\begin_layout Plain Layout

            android:layout_height="wrap_content" >
\end_layout

\begin_layout Plain Layout

            <TextView
\end_layout

\begin_layout Plain Layout

                android:id="@+id/LabelDataZ"
\end_layout

\begin_layout Plain Layout

                android:layout_width="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:layout_height="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:text="SensorDataZ: "
\end_layout

\begin_layout Plain Layout

                android:textAppearance="?android:attr/textAppearanceMedium"
 />
\end_layout

\begin_layout Plain Layout

            <TextView
\end_layout

\begin_layout Plain Layout

                android:id="@+id/ValueDataZ"
\end_layout

\begin_layout Plain Layout

                android:layout_width="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:layout_height="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:textAppearance="?android:attr/textAppearanceMedium"
 />
\end_layout

\begin_layout Plain Layout

        </TableRow>
\end_layout

\begin_layout Plain Layout

	</TableLayout>
\end_layout

\begin_layout Plain Layout

</RelativeLayout>
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newpage newpage
\end_inset

The activity, like the 
\family typewriter
AboutSensor
\family default
 application, changes sensors information when a new sensor is selected
 from 
\family typewriter
Spinner
\family default
 and shows, in addition to sensor informations, the sensor row data updated
 by the sensor event listener, in fact, the 
\family typewriter
SpinnerListener
\family default
, by 
\family typewriter
onItemSelected
\family default
 method, changes the 
\family typewriter
SensorEventsListener
\family default
 calling the 
\family typewriter
updateSensorListener
\family default
 method, which removes old listener from previous selected sensor and attaches
 to the new selected sensor a new listener.
 This method is called too when the application is resumed (
\family typewriter
onResume()
\family default
 method), and, when the application is paused (
\family typewriter
onPause()
\family default
 method) the sensor listener is detached from sensor.
\end_layout

\begin_layout Standard
The 
\family typewriter
SensorEventsListener
\family default
 class extends 
\family typewriter
SensorEventListener
\family default
 interface the defines
\end_layout

\begin_layout Itemize

\family typewriter
onSensorChanged
\family default
 method that updates the sensor data's text views
\end_layout

\begin_layout Itemize

\family typewriter
onAccuracyChanged
\family default
 that, in this case, does nothing
\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box ovalbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout
\begin_inset space \qquad{}
\end_inset


\family typewriter
\shape slanted
\color black
AboutSensorEvents.java
\end_layout

\begin_layout Plain Layout
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily},breaklines=true,comment={[l]{//}},commentstyle={\color{darkgreen}\ttfamily},emph={int, boolean, int, float, double, List,  Sensor, SensorManager, Context, Bundle, ArrayList, Activity, View, AdapterView, OnItemSelectedListener, ArrayAdapter, Spinner, TextView},emphstyle={\color{blue}},identifierstyle={\color{black}},keywords={typeof, new, true, false, catch, function, return, null, catch, switch, var, if, in, while, do, else, case, break, int, long, this, new},keywordstyle={\color{magenta}\bfseries},language=Java,lastline=67,morecomment={[s]{/*}{*/}},ndkeywords={class, export, @Override},ndkeywordstyle={\color{gray}\bfseries},sensitive=false,stringstyle={\color{red}\ttfamily},tabsize=4"
inline false
status open

\begin_layout Plain Layout

package it.unibo.android.aboutSensorEvents;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

import java.util.ArrayList;
\end_layout

\begin_layout Plain Layout

import java.util.List;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

import android.app.Activity;
\end_layout

\begin_layout Plain Layout

import android.hardware.Sensor;
\end_layout

\begin_layout Plain Layout

import android.hardware.SensorEvent;
\end_layout

\begin_layout Plain Layout

import android.hardware.SensorEventListener;
\end_layout

\begin_layout Plain Layout

import android.hardware.SensorManager;
\end_layout

\begin_layout Plain Layout

import android.os.Bundle;
\end_layout

\begin_layout Plain Layout

import android.view.View;
\end_layout

\begin_layout Plain Layout

import android.widget.AdapterView;
\end_layout

\begin_layout Plain Layout

import android.widget.AdapterView.OnItemSelectedListener;
\end_layout

\begin_layout Plain Layout

import android.widget.ArrayAdapter;
\end_layout

\begin_layout Plain Layout

import android.widget.Spinner;
\end_layout

\begin_layout Plain Layout

import android.widget.TextView;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

public class AboutSensorEvents extends Activity {
\end_layout

\begin_layout Plain Layout

	//fields definition
\end_layout

\begin_layout Plain Layout

	private Spinner spinnerList;
\end_layout

\begin_layout Plain Layout

	private SensorManager manager;
\end_layout

\begin_layout Plain Layout

	private List<Sensor> sensors;
\end_layout

\begin_layout Plain Layout

	private Sensor sensorSelected;
\end_layout

\begin_layout Plain Layout

	private ArrayAdapter<String> adapter;
\end_layout

\begin_layout Plain Layout

	private TextView textVersion;
\end_layout

\begin_layout Plain Layout

	private TextView textVendor;
\end_layout

\begin_layout Plain Layout

	private TextView textPower;
\end_layout

\begin_layout Plain Layout

	private TextView textMaxRange;
\end_layout

\begin_layout Plain Layout

	private TextView textResolution;
\end_layout

\begin_layout Plain Layout

	private TextView textMinDelay;
\end_layout

\begin_layout Plain Layout

	private SensorEventListener listener;
\end_layout

\begin_layout Plain Layout

	private TextView textX;
\end_layout

\begin_layout Plain Layout

	private TextView textY;
\end_layout

\begin_layout Plain Layout

	private TextView textZ;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	@Override
\end_layout

\begin_layout Plain Layout

	protected void onCreate(Bundle savedInstanceState) {
\end_layout

\begin_layout Plain Layout

		super.onCreate(savedInstanceState);
\end_layout

\begin_layout Plain Layout

		//set the default layout
\end_layout

\begin_layout Plain Layout

		setContentView(R.layout.activity_about_sensor_events);
\end_layout

\begin_layout Plain Layout

		//initialize the resources
\end_layout

\begin_layout Plain Layout

		initializeResources();
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	@Override
\end_layout

\begin_layout Plain Layout

	protected void onResume() {
\end_layout

\begin_layout Plain Layout

		super.onResume();
\end_layout

\begin_layout Plain Layout

		manager.registerListener(listener, sensorSelected, SensorManager.SENSOR_DELAY_NO
RMAL);
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	@Override
\end_layout

\begin_layout Plain Layout

	protected void onPause() {
\end_layout

\begin_layout Plain Layout

		super.onPause();
\end_layout

\begin_layout Plain Layout

		manager.unregisterListener(listener, sensorSelected);
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box ovalbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily},breaklines=true,comment={[l]{//}},commentstyle={\color{darkgreen}\ttfamily},emph={int, boolean, int, float, double, List,  Sensor, SensorManager, Context, Bundle, ArrayList, Activity, View, AdapterView, OnItemSelectedListener, ArrayAdapter, Spinner, TextView},emphstyle={\color{blue}},identifierstyle={\color{black}},keywords={typeof, new, true, false, catch, function, return, null, catch, switch, var, if, in, while, do, else, case, break, int, long, this, new},keywordstyle={\color{magenta}\bfseries},language=Java,lastline=67,morecomment={[s]{/*}{*/}},ndkeywords={class, export, @override},ndkeywordstyle={\color{gray}\bfseries},sensitive=false,stringstyle={\color{red}\ttfamily},tabsize=4"
inline false
status open

\begin_layout Plain Layout

	private void initializeResources() {
\end_layout

\begin_layout Plain Layout

		//obtain the SensorManager instance and get the sensors list
\end_layout

\begin_layout Plain Layout

		manager = (SensorManager) getSystemService(SENSOR_SERVICE);
\end_layout

\begin_layout Plain Layout

		sensors = manager.getSensorList(Sensor.TYPE_ALL);
\end_layout

\begin_layout Plain Layout

		//get the TextView where put the sensor information
\end_layout

\begin_layout Plain Layout

		textVersion = (TextView)findViewById(R.id.valueVersion);
\end_layout

\begin_layout Plain Layout

		textVendor = (TextView)findViewById(R.id.valueVendor);
\end_layout

\begin_layout Plain Layout

		textPower = (TextView)findViewById(R.id.valuePower);
\end_layout

\begin_layout Plain Layout

		textMaxRange = (TextView)findViewById(R.id.valueMaxRange);
\end_layout

\begin_layout Plain Layout

		textResolution = (TextView)findViewById(R.id.valueResolution);
\end_layout

\begin_layout Plain Layout

		textMinDelay = (TextView)findViewById(R.id.valueMinDelay);
\end_layout

\begin_layout Plain Layout

		//get the TextView where put sensor raw data received
\end_layout

\begin_layout Plain Layout

		textX = (TextView)findViewById(R.id.ValueDataX);
\end_layout

\begin_layout Plain Layout

		textY = (TextView)findViewById(R.id.ValueDataY);
\end_layout

\begin_layout Plain Layout

		textZ = (TextView)findViewById(R.id.ValueDataZ);
\end_layout

\begin_layout Plain Layout

		//get the spinner
\end_layout

\begin_layout Plain Layout

		spinnerList = (Spinner)findViewById(R.id.spinner_sensors);
\end_layout

\begin_layout Plain Layout

		//set up the spinner adapter with sensors names
\end_layout

\begin_layout Plain Layout

		adapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item,
\end_layout

\begin_layout Plain Layout

											getSensorsNames());
\end_layout

\begin_layout Plain Layout

		adapter.setDropDownViewResource(android.R.layout.simple_dropdown_item_1line);
\end_layout

\begin_layout Plain Layout

		spinnerList.setAdapter(adapter);
\end_layout

\begin_layout Plain Layout

		//add the spinner listener
\end_layout

\begin_layout Plain Layout

		addSpinnerListener();
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	private void updateSensorListener() {
\end_layout

\begin_layout Plain Layout

		//if exist a defined listener remove it from sensor
\end_layout

\begin_layout Plain Layout

		if(listener!=null)
\end_layout

\begin_layout Plain Layout

			manager.unregisterListener(listener, sensorSelected);
\end_layout

\begin_layout Plain Layout

		//register new listener
\end_layout

\begin_layout Plain Layout

		listener = new SensorEventsListener();
\end_layout

\begin_layout Plain Layout

		manager.registerListener(listener,
\end_layout

\begin_layout Plain Layout

								sensors.get(spinnerList.getSelectedItemPosition()),
\end_layout

\begin_layout Plain Layout

								SensorManager.SENSOR_DELAY_NORMAL);
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	private void addSpinnerListener() {
\end_layout

\begin_layout Plain Layout

		spinnerList.setOnItemSelectedListener(new OnItemSelectedListener(){
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		@Override
\end_layout

\begin_layout Plain Layout

			public void onItemSelected(AdapterView<?> parent, View view, 
\end_layout

\begin_layout Plain Layout

										int position, long id) {
\end_layout

\begin_layout Plain Layout

				//when an item is selected update the text view 
\end_layout

\begin_layout Plain Layout

				//with the selected sensor's informations
\end_layout

\begin_layout Plain Layout

				Sensor s = sensors.get(position);
\end_layout

\begin_layout Plain Layout

				if(s != sensorSelected){
\end_layout

\begin_layout Plain Layout

					System.out.println(s.toString());
\end_layout

\begin_layout Plain Layout

					textVersion.setText(""+s.getVersion());
\end_layout

\begin_layout Plain Layout

					textVendor.setText(""+s.getVendor());
\end_layout

\begin_layout Plain Layout

					textPower.setText(s.getPower()+" mA");
\end_layout

\begin_layout Plain Layout

					textMaxRange.setText(""+s.getMaximumRange());
\end_layout

\begin_layout Plain Layout

					textResolution.setText(""+s.getResolution());
\end_layout

\begin_layout Plain Layout

					textMinDelay.setText(s.getMinDelay()/1000+" ms");
\end_layout

\begin_layout Plain Layout

					updateSensorListener();
\end_layout

\begin_layout Plain Layout

					sensorSelected = s;
\end_layout

\begin_layout Plain Layout

				}
\end_layout

\begin_layout Plain Layout

			}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

			@Override
\end_layout

\begin_layout Plain Layout

			public void onNothingSelected(AdapterView<?> parent) {
\end_layout

\begin_layout Plain Layout

				textVersion.setText(""); 
\end_layout

\begin_layout Plain Layout

				textVendor.setText("");
\end_layout

\begin_layout Plain Layout

			}		
\end_layout

\begin_layout Plain Layout

		});
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box ovalbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout
\begin_inset listings
lstparams "basicstyle={\footnotesize\ttfamily},breaklines=true,comment={[l]{//}},commentstyle={\color{darkgreen}\ttfamily},emph={int, boolean, int, float, double, List,  Sensor, SensorManager, Context, Bundle, ArrayList, Activity, View, AdapterView, OnItemSelectedListener, ArrayAdapter, Spinner, TextView},emphstyle={\color{blue}},identifierstyle={\color{black}},keywords={typeof, new, true, false, catch, function, return, null, catch, switch, var, if, in, while, do, else, case, break, int, long, this, new},keywordstyle={\color{magenta}\bfseries},language=Java,lastline=67,morecomment={[s]{/*}{*/}},ndkeywords={class, export, @override},ndkeywordstyle={\color{gray}\bfseries},sensitive=false,stringstyle={\color{red}\ttfamily},tabsize=4"
inline false
status open

\begin_layout Plain Layout

	private List<String> getSensorsNames() {
\end_layout

\begin_layout Plain Layout

		//returns the list that contains the names of all available sensors
\end_layout

\begin_layout Plain Layout

		List<String> sensorNames = new ArrayList<String>();
\end_layout

\begin_layout Plain Layout

		for (Sensor s: sensors)
\end_layout

\begin_layout Plain Layout

			sensorNames.add(s.getName());
\end_layout

\begin_layout Plain Layout

		return sensorNames;
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	private class SensorEventsListener implements SensorEventListener {
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		@Override
\end_layout

\begin_layout Plain Layout

		public void onSensorChanged(SensorEvent event) {
\end_layout

\begin_layout Plain Layout

			//show values
\end_layout

\begin_layout Plain Layout

			textX.setText(""+event.values[0]);
\end_layout

\begin_layout Plain Layout

			textY.setText(""+event.values[1]);
\end_layout

\begin_layout Plain Layout

			textZ.setText(""+event.values[2]);
\end_layout

\begin_layout Plain Layout

		}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		@Override
\end_layout

\begin_layout Plain Layout

		public void onAccuracyChanged(Sensor sensor, int accuracy) {
\end_layout

\begin_layout Plain Layout

			//do something when accuracy changes
\end_layout

\begin_layout Plain Layout

		}
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Best practices for accessing and using sensors
\end_layout

\begin_layout Standard
In this section are discussed the guidelines to design an optimized sensor
 implementation.
 
\end_layout

\begin_layout Standard
These guidelines are recommended best practices for anyone who is using
 the sensor framework to access sensors and acquire sensor data.
\end_layout

\begin_layout Subsubsection*
Verify sensors' availability
\end_layout

\begin_layout Standard
Android platform does not require to the manufacturer that a device includes
 particular sensors, then, before using a specific sensor it is necessary
 to check if this sensor exists.
 
\end_layout

\begin_layout Standard
Assume the existence of a sensor simply because is frequently used is a
 bad practice.
\end_layout

\begin_layout Subsubsection*
Unregister sensor listeners
\end_layout

\begin_layout Standard
If a sensor listener is registered and its activity is paused, the sensor
 will continue to acquire data and use battery resources unless the listener
 is unregisterd.
 The bettter way to optimize resources usage is to unregister the listener
 each time the application is paused, or the sensor is no longer needed,
 and then register it again when the app is resumed.
 This is possible using two methods provided by the 
\family typewriter
Activity
\family default
 class:
\end_layout

\begin_layout Description

\family typewriter
onPause()
\family default
 called when the application is going down (or lost the screen)
\end_layout

\begin_layout Description

\family typewriter
onResume()
\family default
 invoked when the application comes back to the screen
\end_layout

\begin_layout Standard
The following code is an example that show how to use this two methods in
 an 
\family typewriter
Activity
\family default
 that implements 
\family typewriter
SensorEventListener
\family default
 interface:
\end_layout

\begin_layout Standard
\align center

\color black
\begin_inset Box ovalbox
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "77page%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout LyX-Code

\color black
\begin_inset listings
lstparams "basicstyle={\footnotesize\sffamily},comment={[l]{//}},commentstyle={\color{darkgreen}\ttfamily},emph={int, boolean, int, float, double, List,  Sensor, SensorManager, Context, Bundle, ArrayList, Activity, View, AdapterView, OnItemSelectedListener, ArrayAdapter, Spinner, TextView},emphstyle={\color{blue}},identifierstyle={\color{black}},keywords={typeof, new, true, false, catch, function, return, null, catch, switch, var, if, in, while, do, else, case, break, int, long, this, new},keywordstyle={\color{magenta}\bfseries},language=Java,morecomment={[s]{/*}{*/}},ndkeywords={class, export, @Override},ndkeywordstyle={\color{gray}\bfseries},sensitive=false,stringstyle={\color{red}\ttfamily},tabsize=4"
inline false
status open

\begin_layout LyX-Code

private SensorManager mSensorManager;
\end_layout

\begin_layout LyX-Code

private Sensor mSensor
\end_layout

\begin_layout LyX-Code

  ...
 
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

@Override protected void onPause() {
\end_layout

\begin_layout LyX-Code

  super.onPause();
\end_layout

\begin_layout LyX-Code

  mSensorManager.unregisterListener(this, mSensor);
\end_layout

\begin_layout LyX-Code

}
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

@Override protected void onResume() {
\end_layout

\begin_layout LyX-Code

  super.onResume();
\end_layout

\begin_layout LyX-Code

  mSensorManager.registerListener(this, mSensor, SensorManager.SENSOR_DELAY_NORMAL
);
\end_layout

\begin_layout LyX-Code

}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Don't test your code on the emulator
\end_layout

\begin_layout Standard
The Android emulator cannot emulate sensors, thus, currently, is not possible
 to test the sensor code on Android Virtual Devices.
 The best way to run a test on sensor code is by using a physical device.
 There are, however, sensor simulators that can be used to simulate sensor
 output.
\end_layout

\begin_layout Subsubsection*
Don't block the onSensorChanged() method
\end_layout

\begin_layout Standard
Android system may call the 
\family typewriter
onSensorChanged(SensorEvent)
\family default
 method quite often because sensor data can changes at high rate, hence
 is recommended, as the best practice, do as little is possible into 
\family typewriter
onSensorChanged(SensorEvent)
\family default
 so as not to block his execution.
\end_layout

\begin_layout Standard
If an application requires any data filtering or reduction of sensor data,
 it would be better perform that work outside of the 
\family typewriter
onSensorChanged(SensorEvent)
\family default
 method.
\end_layout

\begin_layout Subsubsection*
Avoid using deprecated methods or sensor types
\end_layout

\begin_layout Standard
Several methods and constants, such as 
\family typewriter
TYPE_ORIENTATION
\family default
 or 
\family typewriter
TYPE_TEMPERATURE
\family default
, have been deprecated, the first has been replaced by 
\family typewriter
getOrientation()
\family default
 method and the second, in devices that are running Android 4 Ice Cream
 Sandwich, by 
\family typewriter
TYPE_AMBIENT_TEMPERATURE
\family default
 constant.
\end_layout

\begin_layout Subsubsection*
Choose sensor delay carefully
\end_layout

\begin_layout Standard
The registerListener() method requires, in addiction to the listener and
 the sensor, the minimum delay between two notifications.
 The choise of the delivery rate must be suitable for the application or
 use-case: sensors can provide data at very high rates and allowing the
 system to send extra data which is not needed wastes system resources and
 uses battery power.
 Like the accuracy, Android provides, in SensorManager class, four differents
 constants that defines four different delivery rate:
\end_layout

\begin_layout Description

\family typewriter
SENSOR_DELAY_NORMAL
\family default
 delivery rate of 200000μs 
\end_layout

\begin_layout Description

\family typewriter
SENSOR_DELAY_UI
\family default
 delivery rate of 60000μs 
\end_layout

\begin_layout Description

\family typewriter
SENSOR_DELAY_GAME
\family default
 delivery rate of 20000μs
\end_layout

\begin_layout Description

\family typewriter
SENSOR_DELAY_FASTEST
\family default
 delivery rate of 0μs (enable the real delay time of the sensor, obtained
 by 
\family typewriter
getMinDelay()
\family default
 method)
\end_layout

\begin_layout Section
Motion Sensors
\end_layout

\begin_layout Standard
Android platform provides several sensors useful for monitoritoring device
 movement such as tilt, shake, rotation or swing.
 Each movement is usually a reflection of direct user input (e.g.
 steering a car or controlling a ball in games) but it can also be a reflection
 of the physical environment in which the device is sitting (e.g.
 sensor values changes while the device is moving in a car).
 In the first case the sensors' monitoring is relative to the device's frame
 of reference, while in the second case the monitoring is relative to the
 world's frame of reference, but motion sensors, by themselves, are not
 typically used to monitor the device's position, however they can be used
 with other sensors to determine the device's position relative to the world's
 frame of reference (see 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hyperref[sec:positionSensors]{
\backslash
it {Position Sensors}}
\end_layout

\end_inset

 section for more detailed analysis).
\end_layout

\begin_layout Standard
Two motion sensors are always hardware-based (accelerometer and gyroscope),
 while the other (rotation vector, gravity and linear acceleration) can
 be either hardware-based or software-based.
 The availability of software-based sensors is highly variable because they
 derive their data from one or more hardware-based sensors.
 For example some software-based sensors, on some devices, can derive their
 data from accelerometer and magnetometer, but on other devices they may
 also use the gyroscope.
\end_layout

\begin_layout Standard
All motion sensors return, for each 
\family typewriter
SensorEvent
\family default
, a multi-dimensional 
\family typewriter
float
\family default
 array of sensor values.
 The following table summarize the available motion sensors on the Android
 platform and analyzes the array of sensor values for each one of these.
\end_layout

\begin_layout Standard
\align center
\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Motion sensors available on the Android platform
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="26" columns="4">
<features tabularvalignment="middle">
<column alignment="left" valignment="middle" width="25col%">
<column alignment="left" valignment="middle" width="25text%">
<column alignment="left" valignment="middle" width="25text%">
<column alignment="left" valignment="bottom" width="10text%">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
rowcolor{cyan}
\end_layout

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\series bold
Sensor
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\family typewriter
\series bold
SensorEvent
\family default
 data
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\series bold
Description
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="bottom" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\series bold
Units of measure
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="left" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
TYPE_ACCELEROMETER
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
SensorEvent.values[0]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Acceleration force along the x axis (including gravity)
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula 
\[
\nicefrac{m}{s^{2}}
\]

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
SensorEvent.values[1]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Acceleration force along the y axis (including gravity)
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
SensorEvent.values[2]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Acceleration force along the z axis (including gravity)
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="left" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
TYPE_GRAVITY
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
SensorEvent.values[0]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Force of gravity along the x axis
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula 
\[
\nicefrac{m}{s^{2}}
\]

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
SensorEvent.values[1]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Force of gravity along the y axis
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
SensorEvent.values[2]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Force of gravity along the z axis
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="left" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
TYPE_GYROSCOPE
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
SensorEvent.values[0]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Rate of rotation around the x axis
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula 
\[
\nicefrac{rad}{s}
\]

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
SensorEvent.values[1]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Rate of rotation around the y axis
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
SensorEvent.values[2]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Rate of rotation around the z axis
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="left" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
TYPE_GYROSCOPE_UNCALIBRATED
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
SensorEvent.values[0]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Rate of rotation (without drift compensation) around the x axis
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula 
\[
\nicefrac{rad}{s}
\]

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
SensorEvent.values[1]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Rate of rotation (without drift compensation) around the y axis
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
SensorEvent.values[2]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Rate of rotation (without drift compensation) around the z axis
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
SensorEvent.values[3]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Estimated drift around the x axis
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
SensorEvent.values[4]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Estimated drift around the y axis
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
SensorEvent.values[5]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Estimated drift around the z axis
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="left" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
TYPE_LINEAR_ACCELERATION
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
SensorEvent.values[0]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Acceleration force along the x axis (excluding gravity)
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
\begin_inset Formula 
\[
\nicefrac{m}{s^{2}}
\]

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
SensorEvent.values[1]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Acceleration force along the y axis (excluding gravity)
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
SensorEvent.values[2]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Acceleration force along the z axis (excluding gravity)
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="left" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
TYPE_ROTATION_VECTOR
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
SensorEvent.values[0]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Rotation vector component along the x axis (
\begin_inset Formula $x*\sin(\theta/2)$
\end_inset

)
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Unitless
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
SensorEvent.values[1]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Rotation vector component along the x axis (
\begin_inset Formula $y*\sin(\theta/2)$
\end_inset

)
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
SensorEvent.values[2]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Rotation vector component along the x axis (
\begin_inset Formula $z*\sin(\theta/2)$
\end_inset

)
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
SensorEvent.values[3]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Optional: scalar component of the rotation vector (
\begin_inset Formula $\cos(\theta/2)$
\end_inset

)
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="left" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
TYPE_SIGNIFICANT_MOTION
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
N/A
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
N/A
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
N/A
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="left" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
TYPE_STEP_COUNTER
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
SensorEvent.values[0]
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Number of steps taken by the user since the last reboot while the sensor
 was acrivated
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
Steps
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="left" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\size footnotesize
TYPE_STEP_DETECTOR
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
N/A
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
N/A
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size small
N/A
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The rotation vector and the gravity sensor are the most frequently used
 sensors for motion detection and monitoring.
 The rotation vector is particularly versatile and can be used for a wide
 range of motion-related tasks, such as detecting gestures, monitoring angular
 change or relative orientation changes.
 For example the rotation vector sensor is ideal for developing a game,
 an augmented reality application a 2 or 3-dimensional compass etc.
 In most cases using these sensors is a better choice than using the acelleromet
er, the geomagnetic field or the orientation sensor.
\end_layout

\begin_layout Subsubsection*
Android Open Source Project sensors
\end_layout

\begin_layout Standard
The AOSP (Android Open Source Project) provides three software-based motion
 sensors:
\end_layout

\begin_layout Enumerate
gravity sensor
\end_layout

\begin_layout Enumerate
linear acceleration sensor
\end_layout

\begin_layout Enumerate
rotation vector
\end_layout

\begin_layout Standard
These sensors were updated in Android 4.0 Ice Cream Sandwich and now, in
 addiction to other sensors, use a device's gyroscope to improve stability
 and performance.
 To use the AOSP sensors is necessary identify them by using the getVendor()
 and getVersion() methods (the vendor si Google Inc.
 and the version number is 3) because the Android system considers these
 three sensors to be secondary sensors.
 If a device manufacturer provides their own sensors, the AOSP sensors shows
 up as secondary sensors, also, if the device does not have a gyroscope
 the three AOSP sensors are not available and are not shown, because depend
 to it.
\end_layout

\begin_layout Subsection
Accelerometer and Linear Acceleration Sensor
\end_layout

\begin_layout Standard
The accelerometer measures the acceleration applied to the device, including
 the force of gravity.
\end_layout

\begin_layout Standard
The following code shows how to get an instance of the default acceleration
 sensor:
\end_layout

\begin_layout Standard
\align center

\color black
\begin_inset Box ovalbox
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "77page%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout LyX-Code

\color black
\begin_inset listings
lstparams "basicstyle={\footnotesize\sffamily},comment={[l]{//}},commentstyle={\color{darkgreen}\ttfamily},emph={int, boolean, int, float, double, List,  Sensor, SensorManager, Context},emphstyle={\color{blue}},identifierstyle={\color{black}},keywords={typeof, new, true, false, catch, function, return, null, catch, switch, var, if, in, while, do, else, case, break, int, long, this, new},keywordstyle={\color{magenta}\bfseries},language=Java,morecomment={[s]{/*}{*/}},ndkeywords={class, export, throw, implements, import, this},ndkeywordstyle={\color{darkgray}\bfseries},sensitive=false,stringstyle={\color{red}\ttfamily},tabsize=4"
inline false
status open

\begin_layout LyX-Code

private SensorManager mSensorManager;
\end_layout

\begin_layout LyX-Code

private Sensor mSensor
\end_layout

\begin_layout LyX-Code

  ...
 
\end_layout

\begin_layout LyX-Code

mSensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);
\end_layout

\begin_layout LyX-Code

mSensor = mSensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Conceptually, an accelerometer determines the acceleration applied to a
 device (
\begin_inset Formula $A_{d}$
\end_inset

) by measuring the forces that are applied to the sensor itself (
\begin_inset Formula $F_{S}$
\end_inset

) using the Newton's relationship:
\begin_inset Formula 
\[
A_{d}=-\frac{\sum F_{S}}{mass}
\]

\end_inset


\end_layout

\begin_layout Standard
Force of gravity is always influencing the measured acceleration, hence
 the relationship between forces and acceleration becomes
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
A_{d}=-g-\frac{\sum F}{mass}
\]

\end_inset


\end_layout

\begin_layout Standard
for this reason, when the device is sitting on a surface (and the acceleration
 is null) the accelerometer reads a magnitude of 
\begin_inset Formula $g=9.81\nicefrac{m}{s^{2}}$
\end_inset

, while, if the device is in free fall, its accelerometer reads a magnitude
 of 
\begin_inset Formula $g=0\nicefrac{m}{s^{2}}$
\end_inset

.
 Therefore to measure the real acceleration of the device, the contribution
 of the force of gravity must be removed applyinga high-pass filter, while
 a low-pass filter can be used to isolate the force of gravity.
\end_layout

\begin_layout Standard
The following code shows how to isolate and remove the gravity:
\end_layout

\begin_layout Standard
\align center

\color black
\begin_inset Box ovalbox
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "77page%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout LyX-Code

\color black
\begin_inset listings
lstparams "basicstyle={\footnotesize\sffamily},comment={[l]{//}},commentstyle={\color{darkgreen}\ttfamily},emph={int, boolean, int, float, double, List,  Sensor, SensorManager, Context, Bundle, ArrayList, Activity, View, AdapterView, OnItemSelectedListener, ArrayAdapter, Spinner, TextView},emphstyle={\color{blue}},identifierstyle={\color{black}},keywords={typeof, new, true, false, catch, function, return, null, catch, switch, var, if, in, while, do, else, case, break, int, long, this, new},keywordstyle={\color{magenta}\bfseries},language=Java,morecomment={[s]{/*}{*/}},ndkeywords={class, export, @Override},ndkeywordstyle={\color{gray}\bfseries},sensitive=false,stringstyle={\color{red}\ttfamily},tabsize=4"
inline false
status open

\begin_layout LyX-Code

@Override
\end_layout

\begin_layout LyX-Code

public void onSensorChanged(SensorEvent event){
\end_layout

\begin_layout LyX-Code

	// alpha = t/(t+dT)
\end_layout

\begin_layout LyX-Code

	// where t is the low-pass filter's time-constant
\end_layout

\begin_layout LyX-Code

	// and dT is the event delivery rate
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	final float alpha = 0.8;
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	//use low-pass filter to isolate the gravity
\end_layout

\begin_layout LyX-Code

	for (int i = 0; i < 3; i++)
\end_layout

\begin_layout LyX-Code

		gravity[i] = alpha * gravity[i] + (1 - alpha) * event.values[i];
\end_layout

\begin_layout LyX-Code

	
\end_layout

\begin_layout LyX-Code

	//remove the gravity contribution with the high-pass filter
\end_layout

\begin_layout LyX-Code

	for (int i = 0; i < 3; i++)
\end_layout

\begin_layout LyX-Code

		linear_acceleration[i] = event.values[i] - gravity [i];
\end_layout

\begin_layout LyX-Code

}
\end_layout

\end_inset


\end_layout

\begin_layout Description
Note: Different techniques can be used to filter sensor data.
 This example uses a simple filter constant (
\family typewriter
alpha
\family default
) to create a low-pass filter, but its value of 0.8 is a sample value, hence
 the use of this filtering method may need a different 
\family typewriter
alpha
\family default
 value
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Generally the accelerometer is used to monitor the device motion.
 Almost every Android devices has an accelerometer and it uses about 10
 times less power then other motion sensors with the drawback that developers
 may need to implement a low-pass and high-pass filters to remove the force
 of gravity and reduce the noise.
\end_layout

\begin_layout Standard
An easier way to obtain the acceleration along each axis, excluding gravity
 is using a linear accelerator, obtained with the following code:
\end_layout

\begin_layout Standard
\align center

\color black
\begin_inset Box ovalbox
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "77page%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout LyX-Code

\color black
\begin_inset listings
lstparams "basicstyle={\footnotesize\sffamily},comment={[l]{//}},commentstyle={\color{darkgreen}\ttfamily},emph={int, boolean, int, float, double, List,  Sensor, SensorManager, Context},emphstyle={\color{blue}},identifierstyle={\color{black}},keywords={typeof, new, true, false, catch, function, return, null, catch, switch, var, if, in, while, do, else, case, break, int, long, this, new},keywordstyle={\color{magenta}\bfseries},language=Java,morecomment={[s]{/*}{*/}},ndkeywords={class, export, throw, implements, import, this},ndkeywordstyle={\color{darkgray}\bfseries},sensitive=false,stringstyle={\color{red}\ttfamily},tabsize=4"
inline false
status open

\begin_layout LyX-Code

private SensorManager mSensorManager;
\end_layout

\begin_layout LyX-Code

private Sensor mSensor
\end_layout

\begin_layout LyX-Code

  ...
 
\end_layout

\begin_layout LyX-Code

mSensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);
\end_layout

\begin_layout LyX-Code

mSensor = mSensorManager.getDefaultSensor(Sensor.TYPE_LINEAR_ACCELERATION);
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The linear acceleration sensor is tipically used to exclude the gravity
 force from the measures, for example to see how fast a car is going.
 
\end_layout

\begin_layout Subsubsection*
Coordinate System
\end_layout

\begin_layout Standard
Accelerometer and linear acceleration sensor uses the standard coordinate
 system, this means that, when a device is laying flat on a table, in its
 natural orientation:
\end_layout

\begin_layout Itemize
if the device is pushed on the left (is moved to the right), the x acceleration
 value is positive
\end_layout

\begin_layout Itemize
if the device is pushed on the right (is moved to the left), the x acceleration
 value is negative
\end_layout

\begin_layout Itemize
if the device is pushed on the bottom (is moved to the top), the y acceleration
 value is positive
\end_layout

\begin_layout Itemize
if the device is pushed on the top (is moved to the bottom), the y acceleration
 value is negative
\end_layout

\begin_layout Itemize
if the device is pushed toward the sky with an acceleration of 
\begin_inset Formula $A\,\nicefrac{m}{s^{2}}$
\end_inset

, the z acceleation value is equal to 
\begin_inset Formula $A+9,81$
\end_inset

, that corresponds to the acceleration device (
\begin_inset Formula $+A$
\end_inset

) minus the force of gravity (
\begin_inset Formula $-9,81\,\nicefrac{m}{s^{2}}$
\end_inset

).
 In linear accelerometer the acceleration value is 
\begin_inset Formula $+A$
\end_inset

: the gravity force is excluded.
\end_layout

\begin_layout Itemize
if the device is pushed toward the floor with an acceleration of 
\begin_inset Formula $A\,\nicefrac{m}{s^{2}}$
\end_inset

, the z acceleation value is equal to 
\begin_inset Formula $-A+9,81$
\end_inset

, that corresponds to the acceleration device (
\begin_inset Formula $-A$
\end_inset

) minus the force of gravity (
\begin_inset Formula $-9,81\,\nicefrac{m}{s^{2}}$
\end_inset

).
 In linear accelerometer the acceleration value is 
\begin_inset Formula $-A$
\end_inset

: the gravity force is excluded.
\end_layout

\begin_layout Itemize
if the is in freefall, the z acceleation value is equal to 
\begin_inset Formula $0$
\end_inset

: in this case the acceleration is equals to the force of gravity.
 In linear accelerometer the acceleration value is 
\begin_inset Formula $9,81\nicefrac{m}{s^{2}}$
\end_inset

.
\end_layout

\begin_layout Itemize
the z acceleration when the device is not moved values 
\begin_inset Formula $+9,81\nicefrac{m}{s^{2}}$
\end_inset

, which corresponds to the accelearion of the device ( 
\begin_inset Formula $0\nicefrac{m}{s^{2}}$
\end_inset

) minus the force of gravity (
\begin_inset Formula $-9,81\nicefrac{m}{s^{2}}$
\end_inset

)
\end_layout

\begin_layout Subsubsection*
Another way to use accelerometer
\end_layout

\begin_layout Standard
If the developer is not inerested to the acceleration value, but to its
 effect on the device (speed and position in a particular period of time)
 he can use the acceleration relation to obtain the device's instant speed
 (
\begin_inset Formula $v_{1}$
\end_inset

), in function of the initial speed (
\begin_inset Formula $v_{0}$
\end_inset

), the acceleration (
\begin_inset Formula $a$
\end_inset

) and the time
\begin_inset Foot
status open

\begin_layout Plain Layout
assuming 
\begin_inset Formula $t_{0}=0$
\end_inset

, 
\begin_inset Formula $t$
\end_inset

 is the delay between two measurements
\end_layout

\end_inset

 (
\begin_inset Formula $t$
\end_inset

):
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
a=\frac{\Delta v}{\Delta t}=\frac{v_{1}-v_{0}}{\Delta t}\Rightarrow v_{1}=v_{0}+at
\]

\end_inset

Starting to previous relation is possible to obtain the device's displacement:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
s_{1}=v_{1}t=v_{0}t+\frac{at^{2}}{2}
\]

\end_inset

Assuming that 
\begin_inset Formula $v_{0}=0$
\end_inset

 (the device is not moving between the introducion of acceleration) the
 relation become
\begin_inset Formula 
\[
s_{1}=\frac{at^{2}}{2}
\]

\end_inset

Now, considering that the accelerometer (and linear accelerometer) uses
 a coordinate system of a multidimensional device, is necessary to apply
 this relations to each axes:
\end_layout

\begin_layout Itemize
\begin_inset Formula $s_{x}=\frac{a_{x}t^{2}}{2}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $s_{y}=\frac{a_{y}t^{2}}{2}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $s_{z}=\frac{a_{z}t^{2}}{2}$
\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $s_{x}$
\end_inset

, 
\begin_inset Formula $s_{y}$
\end_inset

 and 
\begin_inset Formula $s_{z}$
\end_inset

 represents the displacement on x, y and z axis, and 
\begin_inset Formula $a_{x}$
\end_inset

, 
\begin_inset Formula $a_{y}$
\end_inset

 and 
\begin_inset Formula $a_{z}$
\end_inset

 represents the acceleration on x, y and z axis.
\end_layout

\begin_layout Subsubsection*
Best practices
\end_layout

\begin_layout Standard
Sometimes are not necessary all acceleration values, then we can save the
 interest value(s) and discard the other.
 Othertimes is necessary obtain the acceleration values according to the
 device's orientation, for this reason is suggested to adapt the values
 to the orientation simply using the following code
\begin_inset CommandInset citation
LatexCommand cite
key "intelDev"

\end_inset


\begin_inset Foot
status open

\begin_layout Plain Layout
Modified according to the new Android APIs
\end_layout

\end_inset

:
\end_layout

\begin_layout Standard
\align center

\color black
\begin_inset Box ovalbox
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "77page%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout LyX-Code

\color black
\begin_inset listings
lstparams "basicstyle={\footnotesize\sffamily},comment={[l]{//}},commentstyle={\color{darkgreen}\ttfamily},emph={int, boolean, int, float, double, List,  Sensor, SensorManager, Context, Display},emphstyle={\color{blue}},identifierstyle={\color{black}},keywords={typeof, new, true, false, catch, function, return, null, catch, switch, var, if, in, while, do, else, case, break, int, long, this, new},keywordstyle={\color{magenta}\bfseries},language=Java,morecomment={[s]{/*}{*/}},ndkeywords={class, export, throw, implements, import, this},ndkeywordstyle={\color{darkgray}\bfseries},sensitive=false,stringstyle={\color{red}\ttfamily},tabsize=4"
inline false
status open

\begin_layout Plain Layout

import android.view.Display;
\end_layout

\begin_layout Plain Layout

import android.content.Context;
\end_layout

\begin_layout Plain Layout

...
\end_layout

\begin_layout Plain Layout

float accelX, accelY;
\end_layout

\begin_layout Plain Layout

Display mDisplay = 
\end_layout

\begin_layout Plain Layout

	((WindowManager)getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();
\end_layout

\begin_layout Plain Layout

...
\end_layout

\begin_layout Plain Layout

@Override
\end_layout

\begin_layout Plain Layout

public void onSensorChanged(SensorEvent event) {
\end_layout

\begin_layout Plain Layout

	//detect the current rotation from its natural orientation
\end_layout

\begin_layout Plain Layout

	//using getOrientation() method
\end_layout

\begin_layout Plain Layout

	
\end_layout

\begin_layout Plain Layout

	switch (mDisplay.getOrientation()){
\end_layout

\begin_layout Plain Layout

		case Surface.ROTATION_0:
\end_layout

\begin_layout Plain Layout

			accelX = event.values[0];
\end_layout

\begin_layout Plain Layout

			accelY = event.values[1];
\end_layout

\begin_layout Plain Layout

			break;
\end_layout

\begin_layout Plain Layout

		case Surface.ROTATION_90:
\end_layout

\begin_layout Plain Layout

			accelX = - event.values[0];
\end_layout

\begin_layout Plain Layout

			accelY = event.values[1];
\end_layout

\begin_layout Plain Layout

			break;
\end_layout

\begin_layout Plain Layout

		case Surface.ROTATION_180:
\end_layout

\begin_layout Plain Layout

			accelX = - event.values[0];
\end_layout

\begin_layout Plain Layout

			accelY = - event.values[1];
\end_layout

\begin_layout Plain Layout

			break;
\end_layout

\begin_layout Plain Layout

		case Surface.ROTATION_270:
\end_layout

\begin_layout Plain Layout

			accelX = event.values[0];
\end_layout

\begin_layout Plain Layout

			accelY = - event.values[1];
\end_layout

\begin_layout Plain Layout

			break;
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	...
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Example
Accelerometer Simple Shaker
\begin_inset Foot
status open

\begin_layout Plain Layout
This app is available on github in the project AccelerometerSimpleShaker
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This example uses linear acceleration sensor (better then accelerometer
 because allows the analisys of device's movement, removing force of gravity
 component) and realizes a shaking detector that shows the shake direction
 and its acceleration.
\end_layout

\begin_layout Standard
The application is splitted in three packages:
\end_layout

\begin_layout Itemize

\family typewriter
interfaces
\family default
 which contains the IAccelerometerSupport interface
\end_layout

\begin_layout Itemize

\family typewriter
utils
\family default
 which contains the AccelerometerSupport and DefaultValues class
\end_layout

\begin_layout Itemize

\family typewriter
simpleShaker
\family default
 which contains the application classes
\end_layout

\begin_layout Standard
In this project is introduced too the 
\family typewriter
AccelerometerSupport
\family default
 class, described by 
\family typewriter
IAccelerometerSuppor
\family default
 interface, that provides some features useful to manage sensor data and
 simplify developer's work.
\end_layout

\begin_layout Paragraph*
Layout
\end_layout

\begin_layout Standard
The layout file (
\family typewriter
/res/layout/shaker_main.xml
\family default
) defines the GUI structure: under the title's TextView there is a TableLayout
 (two rows and three columns) which contains in the first row the table
 heading (
\begin_inset Quotes eld
\end_inset

Acceleration X
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Acceleration Y
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

Acceleration Z
\begin_inset Quotes erd
\end_inset

) and in the second one the acceleration value for each axis.
 Below the table there an ImageView that shows the shaking direction and
 under this another 
\family typewriter
TextView
\family default
 in which is shown the total acceleration value (including the gravity force)
 of the device.
 The following code shows the layout file:
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Box ovalbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout
\begin_inset space \qquad{}
\end_inset


\family typewriter
\shape slanted
\color black
shaker_main.xml
\end_layout

\begin_layout Plain Layout
\begin_inset listings
lstparams "basicstyle={\footnotesize\sffamily},breaklines=true,language=XML,lastline=67,tabsize=4"
inline false
status open

\begin_layout Plain Layout

<?xml version="1.0" encoding="utf-8"?>
\end_layout

\begin_layout Plain Layout

<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
\end_layout

\begin_layout Plain Layout

    android:layout_width="fill_parent"
\end_layout

\begin_layout Plain Layout

    android:layout_height="fill_parent"
\end_layout

\begin_layout Plain Layout

    android:background="@color/white"
\end_layout

\begin_layout Plain Layout

    android:orientation="vertical" >
\end_layout

\begin_layout Plain Layout

    <TextView
\end_layout

\begin_layout Plain Layout

        android:layout_width="fill_parent"
\end_layout

\begin_layout Plain Layout

        android:layout_height="wrap_content"
\end_layout

\begin_layout Plain Layout

        android:gravity="center"
\end_layout

\begin_layout Plain Layout

        android:paddingTop="20dip"
\end_layout

\begin_layout Plain Layout

        android:text="@string/title"
\end_layout

\begin_layout Plain Layout

        android:textColor="@color/black"
\end_layout

\begin_layout Plain Layout

        android:textSize="20sp"
\end_layout

\begin_layout Plain Layout

        android:textStyle="bold" />
\end_layout

\begin_layout Plain Layout

   <TableLayout
\end_layout

\begin_layout Plain Layout

        android:layout_width="fill_parent"
\end_layout

\begin_layout Plain Layout

        android:layout_height="wrap_content"
\end_layout

\begin_layout Plain Layout

        android:paddingTop="10dip"
\end_layout

\begin_layout Plain Layout

        android:stretchColumns="*" >
\end_layout

\begin_layout Plain Layout

        <TableRow>
\end_layout

\begin_layout Plain Layout

            <TextView
\end_layout

\begin_layout Plain Layout

                android:layout_width="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:layout_height="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:gravity="center"
\end_layout

\begin_layout Plain Layout

                android:text="@string/acceleration_x"
\end_layout

\begin_layout Plain Layout

                android:textColor="@color/dark_grey"
\end_layout

\begin_layout Plain Layout

                android:textSize="14sp" />
\end_layout

\begin_layout Plain Layout

            <TextView
\end_layout

\begin_layout Plain Layout

                android:layout_width="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:layout_height="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:gravity="center"
\end_layout

\begin_layout Plain Layout

                android:text="@string/acceleration_y"
\end_layout

\begin_layout Plain Layout

                android:textColor="@color/dark_grey"
\end_layout

\begin_layout Plain Layout

                android:textSize="14sp" />
\end_layout

\begin_layout Plain Layout

            <TextView
\end_layout

\begin_layout Plain Layout

                android:layout_width="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:layout_height="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:gravity="center"
\end_layout

\begin_layout Plain Layout

                android:text="@string/acceleration_z"
\end_layout

\begin_layout Plain Layout

                android:textColor="@color/dark_grey"
\end_layout

\begin_layout Plain Layout

                android:textSize="14sp" />
\end_layout

\begin_layout Plain Layout

        </TableRow>
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Box ovalbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout
\begin_inset listings
lstparams "basicstyle={\footnotesize\sffamily},breaklines=true,language=XML,lastline=67,tabsize=4"
inline false
status open

\begin_layout Plain Layout

        <TableRow>
\end_layout

\begin_layout Plain Layout

            <TextView
\end_layout

\begin_layout Plain Layout

                android:id="@+id/acceleration_x"
\end_layout

\begin_layout Plain Layout

                android:layout_width="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:layout_height="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:gravity="center"
\end_layout

\begin_layout Plain Layout

                android:textColor="@color/dark_grey" />
\end_layout

\begin_layout Plain Layout

            <TextView
\end_layout

\begin_layout Plain Layout

                android:id="@+id/acceleration_y"
\end_layout

\begin_layout Plain Layout

                android:layout_width="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:layout_height="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:gravity="center"
\end_layout

\begin_layout Plain Layout

                android:textColor="@color/dark_grey" />
\end_layout

\begin_layout Plain Layout

            <TextView
\end_layout

\begin_layout Plain Layout

                android:id="@+id/acceleration_z"
\end_layout

\begin_layout Plain Layout

                android:layout_width="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:layout_height="wrap_content"
\end_layout

\begin_layout Plain Layout

                android:gravity="center"
\end_layout

\begin_layout Plain Layout

                android:textColor="@color/dark_grey" />
\end_layout

\begin_layout Plain Layout

        </TableRow>
\end_layout

\begin_layout Plain Layout

    </TableLayout>
\end_layout

\begin_layout Plain Layout

    <ImageView
\end_layout

\begin_layout Plain Layout

        android:id="@+id/arrow"
\end_layout

\begin_layout Plain Layout

        android:layout_width="172dp"
\end_layout

\begin_layout Plain Layout

        android:layout_height="152dp"
\end_layout

\begin_layout Plain Layout

        android:layout_gravity="center"
\end_layout

\begin_layout Plain Layout

        android:contentDescription="@string/arrow_contentDescription"
\end_layout

\begin_layout Plain Layout

        android:paddingTop="20dip"
\end_layout

\begin_layout Plain Layout

        android:visibility="invisible" />
\end_layout

\begin_layout Plain Layout

	<TextView
\end_layout

\begin_layout Plain Layout

	    android:id="@+id/acceleration"
\end_layout

\begin_layout Plain Layout

        android:layout_width="fill_parent"
\end_layout

\begin_layout Plain Layout

        android:layout_height="wrap_content"
\end_layout

\begin_layout Plain Layout

        android:gravity="center"
\end_layout

\begin_layout Plain Layout

        android:paddingTop="20dip"
\end_layout

\begin_layout Plain Layout

        android:text="@string/acceleration"
\end_layout

\begin_layout Plain Layout

        android:textColor="@color/dark_grey"
\end_layout

\begin_layout Plain Layout

        android:textSize="16sp"
\end_layout

\begin_layout Plain Layout

        android:textStyle="bold" />
\end_layout

\begin_layout Plain Layout

</LinearLayout>
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Paragraph*
Package 
\family typewriter
accelerometer.simpleShaker.interfaces.utils
\end_layout

\begin_layout Standard
contains only the IAccelerometerSupport interface.
\end_layout

\begin_layout Subparagraph*

\family typewriter
IAccelerometerSupport:
\end_layout

\begin_layout Standard
introduces the basic features that this class provides to the developer,
 such as setter and getter for each information (deltas, acceleration, direction
) and some utility, like a method that returns the opposite direction in
 various representation or another one that notifies if the support class
 contains updated informations.
 Below is shown this interface and.
\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\color black

\begin_inset Box ovalbox
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "77page%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

IAccelerometerSupport.java
\end_layout

\begin_layout LyX-Code

\color black
\begin_inset listings
lstparams "basicstyle={\scriptsize\sffamily},comment={[l]{//}},commentstyle={\color{darkgreen}\ttfamily},emph={int, boolean, int, float, double, List,  Sensor, SensorManager, Context, Bundle, ArrayList, Activity, View, AdapterView, OnItemSelectedListener, ArrayAdapter, Spinner, TextView, simpleShaker, R, ImageView},emphstyle={\color{blue}},identifierstyle={\color{black}},keywords={typeof, new, true, false, catch, function, return, null, catch, switch, var, if, in, while, do, else, case, break, int, long, this, new},keywordstyle={\color{magenta}\bfseries},language=Java,morecomment={[s]{/*}{*/}},ndkeywords={class, export, @Override},ndkeywordstyle={\color{gray}\bfseries},sensitive=false,stringstyle={\color{red}\ttfamily},tabsize=4"
inline false
status open

\begin_layout LyX-Code

package it.unibo.android.accelerometer.simpleShaker.interfaces.utils;
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

import it.unibo.android.accelerometer.simpleShaker.utils.DefaultValues.Directions;
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

public interface IAccelerometerSupport { 
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	public void setDeltas(float[] values);
\end_layout

\begin_layout LyX-Code

	public void setDelta(int index, float value);
\end_layout

\begin_layout LyX-Code

	public void setDeltaX(float x);
\end_layout

\begin_layout LyX-Code

	public void setDeltaY(float y);
\end_layout

\begin_layout LyX-Code

	public void setDeltaZ(float z);
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	public void setAcceleration();
\end_layout

\begin_layout LyX-Code

	public void setAcceleration(float[] values);
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	public void setDirection();
\end_layout

\begin_layout LyX-Code

	public void setDirection(Directions direction);
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	public float getDeltaX();
\end_layout

\begin_layout LyX-Code

	public float getDeltaY();
\end_layout

\begin_layout LyX-Code

	public float getDeltaZ();
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	public String getDeltaXAsString();
\end_layout

\begin_layout LyX-Code

	public String getDeltaYAsString();
\end_layout

\begin_layout LyX-Code

	public String getDeltaZAsString();
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	public float getAcceleration();
\end_layout

\begin_layout LyX-Code

	public String getAccelerationAsString(); 
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	public Directions getDirection(); 
\end_layout

\begin_layout LyX-Code

	public int getDirectionAsInt(); 
\end_layout

\begin_layout LyX-Code

	public String getDirectionAsString(); 
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	public String DirectionToString(Directions direction);
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	public Directions getOpposite(Directions direction); 
\end_layout

\begin_layout LyX-Code

	public int getOppositeAsInt(Directions direction);
\end_layout

\begin_layout LyX-Code

	public String getOppositeAsString(Directions direction); 
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	public void setData(float[] values); 
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	public boolean updated();
\end_layout

\begin_layout LyX-Code

}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph*
Package 
\family typewriter
accelerometer.simpleShaker.utils
\end_layout

\begin_layout Standard
contains two classes, in the first one are defined support variables and
 classes, while the second is the real accelerometer support class.
\end_layout

\begin_layout Subparagraph*

\family typewriter
DefalutValues
\family default
:
\end_layout

\begin_layout Standard
defines the 
\family typewriter
Directions
\family default
 enumeration and 
\family typewriter
THRESHOLD
\family default
 value (minimum value of acceleration that will be considered):
\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\color black

\begin_inset Box ovalbox
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "77page%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

DefaultValues.java
\end_layout

\begin_layout LyX-Code

\color black
\begin_inset listings
lstparams "basicstyle={\scriptsize\sffamily},comment={[l]{//}},commentstyle={\color{darkgreen}\ttfamily},emph={int, boolean, int, float, double, List,  Sensor, SensorManager, Context, Bundle, ArrayList, Activity, View, AdapterView, OnItemSelectedListener, ArrayAdapter, Spinner, TextView, simpleShaker, R, ImageView},emphstyle={\color{blue}},identifierstyle={\color{black}},keywords={typeof, new, true, false, catch, function, return, null, catch, switch, var, if, in, while, do, else, case, break, int, long, this, new},keywordstyle={\color{magenta}\bfseries},language=Java,morecomment={[s]{/*}{*/}},ndkeywords={class, export, @Override},ndkeywordstyle={\color{gray}\bfseries},sensitive=false,stringstyle={\color{red}\ttfamily},tabsize=4"
inline false
status open

\begin_layout LyX-Code

package it.unibo.android.accelerometer.simpleShaker.utils;
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

public class DefaultValues {
\end_layout

\begin_layout LyX-Code

	public enum Directions{NONE, FORWARD, BACK, RIGHT, LEFT};
\end_layout

\begin_layout LyX-Code

	public static final float THRESHOLD = (float)2.5;
\end_layout

\begin_layout LyX-Code

}
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Subparagraph*
AccelerometerSupport:
\end_layout

\begin_layout Standard
implements the IAccelerometerSupport interface.
 This class can be usefull for each application that uses accelerometer
 (or Linear Acceleration Sensor):
\begin_inset Newline newline
\end_inset


\color black

\begin_inset Box ovalbox
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "77page%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

AccelerometerSupport.java
\end_layout

\begin_layout LyX-Code

\color black
\begin_inset listings
lstparams "basicstyle={\scriptsize\sffamily},comment={[l]{//}},commentstyle={\color{darkgreen}\ttfamily},emph={int, boolean, int, float, double, List,  Sensor, SensorManager, Context, Bundle, ArrayList, Activity, View, AdapterView, OnItemSelectedListener, ArrayAdapter, Spinner, TextView, simpleShaker, R, ImageView},emphstyle={\color{blue}},identifierstyle={\color{black}},keywords={typeof, new, true, false, catch, function, return, null, catch, switch, var, if, in, while, do, else, case, break, int, long, this, new},keywordstyle={\color{magenta}\bfseries},language=Java,morecomment={[s]{/*}{*/}},ndkeywords={class, export, @Override},ndkeywordstyle={\color{gray}\bfseries},sensitive=false,stringstyle={\color{red}\ttfamily},tabsize=4"
inline false
status open

\begin_layout LyX-Code

package it.unibo.android.accelerometer.simpleShaker.utils;
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

import it.unibo.android.accelerometer.simpleShaker.interfaces.utils.IAccelerometerSuppo
rt;
\end_layout

\begin_layout LyX-Code

import it.unibo.android.accelerometer.simpleShaker.utils.DefaultValues.Directions;
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

public class AccelerometerSupport implements IAccelerometerSupport {
\end_layout

\begin_layout LyX-Code

	private boolean initialized;
\end_layout

\begin_layout LyX-Code

	private float[] previous;
\end_layout

\begin_layout LyX-Code

	private float[] delta;
\end_layout

\begin_layout LyX-Code

	private float acceleration;
\end_layout

\begin_layout LyX-Code

	private  Directions direction, previousDirection;
\end_layout

\begin_layout LyX-Code

	private boolean update;
\end_layout

\begin_layout LyX-Code

	private long lastShake;
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	public AccelerometerSupport(){
\end_layout

\begin_layout LyX-Code

		//initialize all variables
\end_layout

\begin_layout LyX-Code

		direction = Directions.NONE;
\end_layout

\begin_layout LyX-Code

		previousDirection = Directions.NONE;
\end_layout

\begin_layout LyX-Code

		previous = new float[3];
\end_layout

\begin_layout LyX-Code

		previous[0] = Float.NaN;
\end_layout

\begin_layout LyX-Code

		previous[1] = Float.NaN; 
\end_layout

\begin_layout LyX-Code

		previous[2] = Float.NaN;
\end_layout

\begin_layout LyX-Code

		delta = new float[3]; 
\end_layout

\begin_layout LyX-Code

		delta[0] = Float.NaN; 
\end_layout

\begin_layout LyX-Code

		delta[1] = Float.NaN; 
\end_layout

\begin_layout LyX-Code

		delta[2] = Float.NaN; 
\end_layout

\begin_layout LyX-Code

		acceleration = Float.NaN; 
\end_layout

\begin_layout LyX-Code

		update = false; 
\end_layout

\begin_layout LyX-Code

		initialized = false; 
\end_layout

\begin_layout LyX-Code

		lastShake = 0; 
\end_layout

\begin_layout LyX-Code

	}
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	@Override
\end_layout

\begin_layout LyX-Code

	public void setDeltas(float[] values){ 
\end_layout

\begin_layout LyX-Code

		//if vars are initialized calculate deltas
\end_layout

\begin_layout LyX-Code

		if (initialized)
\end_layout

\begin_layout LyX-Code

			for (int i = 0; i<3; i++) 
\end_layout

\begin_layout LyX-Code

				delta[i] = previous[i] - values[i];
\end_layout

\begin_layout LyX-Code

		//else set previous variables to actual values
\end_layout

\begin_layout LyX-Code

		else{ 
\end_layout

\begin_layout LyX-Code

			for (int i = 0; i<3; i++) 
\end_layout

\begin_layout LyX-Code

				previous[i] = values[i]; 
\end_layout

\begin_layout LyX-Code

			initialized = true; 
\end_layout

\begin_layout LyX-Code

		}
\end_layout

\begin_layout LyX-Code

	} 
\end_layout

\begin_layout LyX-Code

	@Override		
\end_layout

\begin_layout LyX-Code

	public void setDelta(int index, float value) { 
\end_layout

\begin_layout LyX-Code

		//if index is not out of bound 
\end_layout

\begin_layout LyX-Code

		if((index >= 0)&&(index <= 2)){ 
\end_layout

\begin_layout LyX-Code

			//if variable is initialized update delta 
\end_layout

\begin_layout LyX-Code

			if (initialized) 
\end_layout

\begin_layout LyX-Code

				delta[index] = previous[index] - value; 
\end_layout

\begin_layout LyX-Code

			//else set previous and if other previous are not NaN set initialized
 as true 
\end_layout

\begin_layout LyX-Code

			else{ 
\end_layout

\begin_layout LyX-Code

				previous[index] = value; 
\end_layout

\begin_layout LyX-Code

				int counter = 0; 
\end_layout

\begin_layout LyX-Code

				for (int i = 0; i < 3; i++) 
\end_layout

\begin_layout LyX-Code

					if (i!=index && previous[i] != Float.NaN) 
\end_layout

\begin_layout LyX-Code

						counter++; 
\end_layout

\begin_layout LyX-Code

				if (counter == 2) 
\end_layout

\begin_layout LyX-Code

					initialized = true; 
\end_layout

\begin_layout LyX-Code

			} 
\end_layout

\begin_layout LyX-Code

		} 
\end_layout

\begin_layout LyX-Code

		else 
\end_layout

\begin_layout LyX-Code

			System.err.println("Error: index out of bound!"); 
\end_layout

\begin_layout LyX-Code

	}
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	//following three method are similar to previous 
\end_layout

\begin_layout LyX-Code

	@Override 
\end_layout

\begin_layout LyX-Code

	public void setDeltaX(float x) { 
\end_layout

\begin_layout LyX-Code

		if (initialized) 
\end_layout

\begin_layout LyX-Code

			delta[0] = previous[0] - x; 
\end_layout

\begin_layout LyX-Code

		else{ 
\end_layout

\begin_layout LyX-Code

			previous[0] = x; 
\end_layout

\begin_layout LyX-Code

			if((previous[1] != Float.NaN)&&(previous[2] != Float.NaN)) 
\end_layout

\begin_layout LyX-Code

				initialized = true; 
\end_layout

\begin_layout LyX-Code

		} 
\end_layout

\begin_layout LyX-Code

	}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\color black

\begin_inset Box ovalbox
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "77page%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout LyX-Code

\color black
\begin_inset listings
lstparams "basicstyle={\scriptsize\sffamily},comment={[l]{//}},commentstyle={\color{darkgreen}\ttfamily},emph={int, boolean, int, float, double, List,  Sensor, SensorManager, Context, Bundle, ArrayList, Activity, View, AdapterView, OnItemSelectedListener, ArrayAdapter, Spinner, TextView, simpleShaker, R, ImageView},emphstyle={\color{blue}},identifierstyle={\color{black}},keywords={typeof, new, true, false, catch, function, return, null, catch, switch, var, if, in, while, do, else, case, break, int, long, this, new},keywordstyle={\color{magenta}\bfseries},language=Java,morecomment={[s]{/*}{*/}},ndkeywords={class, export, @Override},ndkeywordstyle={\color{gray}\bfseries},sensitive=false,stringstyle={\color{red}\ttfamily},tabsize=4"
inline false
status open

\begin_layout LyX-Code

	@Override 
\end_layout

\begin_layout LyX-Code

	public void setDeltaY(float y) { 
\end_layout

\begin_layout LyX-Code

		if (initialized) 
\end_layout

\begin_layout LyX-Code

			delta[1] = previous[1] - y; 
\end_layout

\begin_layout LyX-Code

		else{ 
\end_layout

\begin_layout LyX-Code

			previous[1] = y; 
\end_layout

\begin_layout LyX-Code

			if((previous[0] != Float.NaN)&&(previous[2] != Float.NaN)) 
\end_layout

\begin_layout LyX-Code

				initialized = true; 
\end_layout

\begin_layout LyX-Code

		} 
\end_layout

\begin_layout LyX-Code

	} 
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	@Override 
\end_layout

\begin_layout LyX-Code

	public void setDeltaZ(float z) { 
\end_layout

\begin_layout LyX-Code

		if (initialized) 
\end_layout

\begin_layout LyX-Code

			delta[2] = previous[2] - z; 
\end_layout

\begin_layout LyX-Code

		else{ 
\end_layout

\begin_layout LyX-Code

			previous[2] = z; 
\end_layout

\begin_layout LyX-Code

			if((previous[0] != Float.NaN)&&(previous[1] != Float.NaN)) 
\end_layout

\begin_layout LyX-Code

				initialized = true; 
\end_layout

\begin_layout LyX-Code

		} 
\end_layout

\begin_layout LyX-Code

	}
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	@Override
\end_layout

\begin_layout LyX-Code

	public void setAcceleration() {
\end_layout

\begin_layout LyX-Code

		//acceleration is the square root of sum of each delta high 2 
\end_layout

\begin_layout LyX-Code

		acceleration = (float)Math.sqrt(Math.pow(delta[0], 2) + Math.pow(delta[1],
 2) + 
\end_layout

\begin_layout LyX-Code

										Math.pow(delta[2], 2));
\end_layout

\begin_layout LyX-Code

	}
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	@Override 
\end_layout

\begin_layout LyX-Code

	public void setAcceleration(float[] values) { 
\end_layout

\begin_layout LyX-Code

		//acceleration is the square root of sum of each sensor value high 2 
\end_layout

\begin_layout LyX-Code

		acceleration = (float)Math.sqrt(Math.pow(values[0], 2) + Math.pow(values[1],
 2) + 
\end_layout

\begin_layout LyX-Code

										Math.pow(values[2], 2)); 
\end_layout

\begin_layout LyX-Code

	}
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	@Override
\end_layout

\begin_layout LyX-Code

	public void setDirection() { 
\end_layout

\begin_layout LyX-Code

		//get current time 
\end_layout

\begin_layout LyX-Code

		long now = System.currentTimeMillis(); 
\end_layout

\begin_layout LyX-Code

		//initialize d array to absolute value of delta[i] 
\end_layout

\begin_layout LyX-Code

		float d[] = new float[3]; 
\end_layout

\begin_layout LyX-Code

		for (int i = 0;i < 3; i++) 
\end_layout

\begin_layout LyX-Code

			d[i] = Math.abs(delta[i]); 
\end_layout

\begin_layout LyX-Code

		direction = Directions.NONE; 
\end_layout

\begin_layout LyX-Code

		//if d[i] is less then threshold value set delta[i] to 0; 
\end_layout

\begin_layout LyX-Code

		for (int i = 0; i < 3; i++) 
\end_layout

\begin_layout LyX-Code

			if ( d[i] < DefaultValues.THRESHOLD)  
\end_layout

\begin_layout LyX-Code

				delta[i] = (float)0.0; 	
\end_layout

\begin_layout LyX-Code

		//check if delta on x or y axis are not 0 
\end_layout

\begin_layout LyX-Code

		if (delta[0] != 0 || delta[1] != 0){ 	
\end_layout

\begin_layout LyX-Code

		//if delta on x is less then y 	
\end_layout

\begin_layout LyX-Code

		if (d[1] > d[0]) { 	
\end_layout

\begin_layout LyX-Code

			//if delta is less then 0 
\end_layout

\begin_layout LyX-Code

				if (delta[1] < 0){ 
\end_layout

\begin_layout LyX-Code

					//device was shaken downward 
\end_layout

\begin_layout LyX-Code

 					direction = Directions.BACK; 
\end_layout

\begin_layout LyX-Code

				} 
\end_layout

\begin_layout LyX-Code

				else 
\end_layout

\begin_layout LyX-Code

					//else direction is forward 
\end_layout

\begin_layout LyX-Code

					direction = Directions.FORWARD; 
\end_layout

\begin_layout LyX-Code

			//else, if delta on x is better then delta on y 
\end_layout

\begin_layout LyX-Code

			} else if (d[0] > d[1]) { 
\end_layout

\begin_layout LyX-Code

				//if delta is less then 0 
\end_layout

\begin_layout LyX-Code

				if (delta[0] < 0) 
\end_layout

\begin_layout LyX-Code

					//device was shaken toward left 
\end_layout

\begin_layout LyX-Code

					direction = Directions.LEFT; 
\end_layout

\begin_layout LyX-Code

				else 
\end_layout

\begin_layout LyX-Code

					//else direction is right 
\end_layout

\begin_layout LyX-Code

					direction = Directions.RIGHT; 
\end_layout

\begin_layout LyX-Code

			} 
\end_layout

\begin_layout LyX-Code

		} 	
\end_layout

\begin_layout LyX-Code

		//if direction is none and the difference between now and 
\end_layout

\begin_layout LyX-Code

		//lastShake update is better then 1000 (1 sec)
\end_layout

\begin_layout LyX-Code

		if((direction != Directions.NONE) && (now - lastShake >= 1000) ){ 
\end_layout

\begin_layout LyX-Code

			//check if direction is the opposite of previous direction 
\end_layout

\begin_layout LyX-Code

			if (direction == getOpposite(previousDirection)){ 
\end_layout

\begin_layout LyX-Code

				//if it is true, actual and previous direction are null (like a stop)
 
\end_layout

\begin_layout LyX-Code

				direction = Directions.NONE; 
\end_layout

\begin_layout LyX-Code

				previousDirection = Directions.NONE; 
\end_layout

\begin_layout LyX-Code

			} 
\end_layout

\begin_layout LyX-Code

			previousDirection = direction; 
\end_layout

\begin_layout LyX-Code

			update = true; 
\end_layout

\begin_layout LyX-Code

			lastShake = now; 
\end_layout

\begin_layout LyX-Code

		} 
\end_layout

\begin_layout LyX-Code

	} 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\color black

\begin_inset Box ovalbox
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "77page%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout LyX-Code

\color black
\begin_inset listings
lstparams "basicstyle={\scriptsize\sffamily},comment={[l]{//}},commentstyle={\color{darkgreen}\ttfamily},emph={int, boolean, int, float, double, List,  Sensor, SensorManager, Context, Bundle, ArrayList, Activity, View, AdapterView, OnItemSelectedListener, ArrayAdapter, Spinner, TextView, simpleShaker, R, ImageView},emphstyle={\color{blue}},identifierstyle={\color{black}},keywords={typeof, new, true, false, catch, function, return, null, catch, switch, var, if, in, while, do, else, case, break, int, long, this, new},keywordstyle={\color{magenta}\bfseries},language=Java,morecomment={[s]{/*}{*/}},ndkeywords={class, export, @Override},ndkeywordstyle={\color{gray}\bfseries},sensitive=false,stringstyle={\color{red}\ttfamily},tabsize=4"
inline false
status open

\begin_layout LyX-Code

	@Override 
\end_layout

\begin_layout LyX-Code

	public void setDirection(Directions direction){ 
\end_layout

\begin_layout LyX-Code

		this.direction = direction; 
\end_layout

\begin_layout LyX-Code

	}
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	@Override 
\end_layout

\begin_layout LyX-Code

	public float getDeltaX() { 
\end_layout

\begin_layout LyX-Code

		return delta[0]; 
\end_layout

\begin_layout LyX-Code

	}
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	@Override 
\end_layout

\begin_layout LyX-Code

	public float getDeltaY() { 
\end_layout

\begin_layout LyX-Code

		return delta[1]; 
\end_layout

\begin_layout LyX-Code

	}
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	@Override 
\end_layout

\begin_layout LyX-Code

	public float getDeltaZ() { 
\end_layout

\begin_layout LyX-Code

		return delta[2]; 
\end_layout

\begin_layout LyX-Code

	}
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	@Override
\end_layout

\begin_layout LyX-Code

	public String getDeltaXAsString() { 
\end_layout

\begin_layout LyX-Code

		return ""+delta[0]; 
\end_layout

\begin_layout LyX-Code

	}
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	@Override 
\end_layout

\begin_layout LyX-Code

	public String getDeltaYAsString() { 
\end_layout

\begin_layout LyX-Code

		return ""+delta[1]; 
\end_layout

\begin_layout LyX-Code

	}
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	@Override 
\end_layout

\begin_layout LyX-Code

	public String getDeltaZAsString() { 
\end_layout

\begin_layout LyX-Code

		return ""+delta[2]; 
\end_layout

\begin_layout LyX-Code

	}
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	@Override 
\end_layout

\begin_layout LyX-Code

	public float getAcceleration() { 
\end_layout

\begin_layout LyX-Code

		if (!initialized) 
\end_layout

\begin_layout LyX-Code

			return 0; 
\end_layout

\begin_layout LyX-Code

		return acceleration; 
\end_layout

\begin_layout LyX-Code

	}
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	@Override 
\end_layout

\begin_layout LyX-Code

	public String getAccelerationAsString() { 
\end_layout

\begin_layout LyX-Code

		return ""+acceleration; 
\end_layout

\begin_layout LyX-Code

	}
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	@Override 
\end_layout

\begin_layout LyX-Code

	public Directions getDirection(){ 
\end_layout

\begin_layout LyX-Code

		if (!initialized) 
\end_layout

\begin_layout LyX-Code

			return Directions.NONE; 
\end_layout

\begin_layout LyX-Code

		return this.direction; 
\end_layout

\begin_layout LyX-Code

	} 
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	@Override 
\end_layout

\begin_layout LyX-Code

	public int getDirectionAsInt() { 
\end_layout

\begin_layout LyX-Code

		switch(direction){ 
\end_layout

\begin_layout LyX-Code

			case BACK: 
\end_layout

\begin_layout LyX-Code

				return 1; 
\end_layout

\begin_layout LyX-Code

			case FORWARD: 
\end_layout

\begin_layout LyX-Code

				return 2; 
\end_layout

\begin_layout LyX-Code

			case RIGHT: 
\end_layout

\begin_layout LyX-Code

				return 3; 
\end_layout

\begin_layout LyX-Code

			case LEFT: 
\end_layout

\begin_layout LyX-Code

				return 4; 
\end_layout

\begin_layout LyX-Code

			default: 
\end_layout

\begin_layout LyX-Code

				return 0; 
\end_layout

\begin_layout LyX-Code

		} 
\end_layout

\begin_layout LyX-Code

	} 
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	@Override
\end_layout

\begin_layout LyX-Code

	public String getDirectionAsString() { 
\end_layout

\begin_layout LyX-Code

		switch(direction){ 
\end_layout

\begin_layout LyX-Code

			case BACK: 
\end_layout

\begin_layout LyX-Code

				return "BACK"; 
\end_layout

\begin_layout LyX-Code

			case FORWARD: 
\end_layout

\begin_layout LyX-Code

				return "FORWARD"; 
\end_layout

\begin_layout LyX-Code

			case RIGHT: 
\end_layout

\begin_layout LyX-Code

				return "RIGHT"; 
\end_layout

\begin_layout LyX-Code

			case LEFT: 
\end_layout

\begin_layout LyX-Code

				return "LEFT";
\end_layout

\begin_layout LyX-Code

			default: 
\end_layout

\begin_layout LyX-Code

				return "NONE"; 
\end_layout

\begin_layout LyX-Code

		}
\end_layout

\begin_layout LyX-Code

	}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\color black

\begin_inset Box ovalbox
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "77page%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout LyX-Code

\color black
\begin_inset listings
lstparams "basicstyle={\scriptsize\sffamily},comment={[l]{//}},commentstyle={\color{darkgreen}\ttfamily},emph={int, boolean, int, float, double, List,  Sensor, SensorManager, Context, Bundle, ArrayList, Activity, View, AdapterView, OnItemSelectedListener, ArrayAdapter, Spinner, TextView, simpleShaker, R, ImageView},emphstyle={\color{blue}},identifierstyle={\color{black}},keywords={typeof, new, true, false, catch, function, return, null, catch, switch, var, if, in, while, do, else, case, break, int, long, this, new},keywordstyle={\color{magenta}\bfseries},language=Java,morecomment={[s]{/*}{*/}},ndkeywords={class, export, @Override},ndkeywordstyle={\color{gray}\bfseries},sensitive=false,stringstyle={\color{red}\ttfamily},tabsize=4"
inline false
status open

\begin_layout LyX-Code

	@Override 
\end_layout

\begin_layout LyX-Code

	public String DirectionToString(Directions direction) { 
\end_layout

\begin_layout LyX-Code

		switch(direction){ 
\end_layout

\begin_layout LyX-Code

			case BACK: 
\end_layout

\begin_layout LyX-Code

				return "BACK"; 
\end_layout

\begin_layout LyX-Code

			case FORWARD: 
\end_layout

\begin_layout LyX-Code

				return "FORWARD"; 
\end_layout

\begin_layout LyX-Code

			case RIGHT: 
\end_layout

\begin_layout LyX-Code

				return "RIGHT"; 
\end_layout

\begin_layout LyX-Code

			case LEFT: 
\end_layout

\begin_layout LyX-Code

				return "LEFT"; 
\end_layout

\begin_layout LyX-Code

			default: 
\end_layout

\begin_layout LyX-Code

				return "NONE"; 
\end_layout

\begin_layout LyX-Code

		} 
\end_layout

\begin_layout LyX-Code

	}
\end_layout

\begin_layout LyX-Code

	 
\end_layout

\begin_layout LyX-Code

	@Override
\end_layout

\begin_layout LyX-Code

	public Directions getOpposite(Directions direction) { 
\end_layout

\begin_layout LyX-Code

		switch(direction){ 
\end_layout

\begin_layout LyX-Code

			case BACK: 
\end_layout

\begin_layout LyX-Code

				return Directions.FORWARD; 
\end_layout

\begin_layout LyX-Code

			case FORWARD: 
\end_layout

\begin_layout LyX-Code

				return Directions.BACK; 
\end_layout

\begin_layout LyX-Code

			case RIGHT: 
\end_layout

\begin_layout LyX-Code

				return Directions.LEFT; 
\end_layout

\begin_layout LyX-Code

			case LEFT: 
\end_layout

\begin_layout LyX-Code

				return Directions.RIGHT; 
\end_layout

\begin_layout LyX-Code

			default: 
\end_layout

\begin_layout LyX-Code

				return Directions.NONE; 
\end_layout

\begin_layout LyX-Code

		} 
\end_layout

\begin_layout LyX-Code

	}
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	@Override 
\end_layout

\begin_layout LyX-Code

	public int getOppositeAsInt(Directions direction) { 
\end_layout

\begin_layout LyX-Code

		switch(direction){ 
\end_layout

\begin_layout LyX-Code

			case FORWARD: 
\end_layout

\begin_layout LyX-Code

				return 1; 
\end_layout

\begin_layout LyX-Code

			case BACK: 
\end_layout

\begin_layout LyX-Code

				return 2; 
\end_layout

\begin_layout LyX-Code

			case LEFT: 
\end_layout

\begin_layout LyX-Code

				return 3; 
\end_layout

\begin_layout LyX-Code

			case RIGHT: 
\end_layout

\begin_layout LyX-Code

				return 4;
\end_layout

\begin_layout LyX-Code

			default: 
\end_layout

\begin_layout LyX-Code

				return 0;
\end_layout

\begin_layout LyX-Code

		} 
\end_layout

\begin_layout LyX-Code

	}
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	@Override 
\end_layout

\begin_layout LyX-Code

	public String getOppositeAsString(Directions direction) { 
\end_layout

\begin_layout LyX-Code

		switch(direction){ 
\end_layout

\begin_layout LyX-Code

			case BACK: 
\end_layout

\begin_layout LyX-Code

				return "FORWARD"; 
\end_layout

\begin_layout LyX-Code

			case FORWARD: 
\end_layout

\begin_layout LyX-Code

				return "BACK";
\end_layout

\begin_layout LyX-Code

			case RIGHT: 
\end_layout

\begin_layout LyX-Code

				return "LEFT";
\end_layout

\begin_layout LyX-Code

			case LEFT:
\end_layout

\begin_layout LyX-Code

				return "RIGHT";
\end_layout

\begin_layout LyX-Code

			default: 
\end_layout

\begin_layout LyX-Code

				return "NONE"; 
\end_layout

\begin_layout LyX-Code

		}
\end_layout

\begin_layout LyX-Code

	}
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	@Override
\end_layout

\begin_layout LyX-Code

	public void setData(float[] values) { 
\end_layout

\begin_layout LyX-Code

		boolean init = initialized; 
\end_layout

\begin_layout LyX-Code

		setDeltas(values); 
\end_layout

\begin_layout LyX-Code

		if(init){ 
\end_layout

\begin_layout LyX-Code

			setAcceleration(values); 
\end_layout

\begin_layout LyX-Code

			setDirection(); 
\end_layout

\begin_layout LyX-Code

		} 
\end_layout

\begin_layout LyX-Code

	} 
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	@Override 
\end_layout

\begin_layout LyX-Code

	public boolean updated(){ 
\end_layout

\begin_layout LyX-Code

		if(update){ 
\end_layout

\begin_layout LyX-Code

			update = false; 
\end_layout

\begin_layout LyX-Code

			return true; 
\end_layout

\begin_layout LyX-Code

		} 
\end_layout

\begin_layout LyX-Code

		return update; 
\end_layout

\begin_layout LyX-Code

	}
\end_layout

\begin_layout LyX-Code

}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph*
Package 
\family typewriter
accelerometer.simpleShaker:
\end_layout

\begin_layout Standard
Is the main package, that contains the Activity (ShakerActivity) and the
 definition of the AccelerometerListener.
\end_layout

\begin_layout Subparagraph*

\family typewriter
ShakerActivity:
\end_layout

\begin_layout Standard
contains the code that provides basic activity's operation and GUI updates.
 In this class are defined the 
\family typewriter
onCreate
\family default
 method, that obtain references to GUI's objects, sensor instance and register
 to it an 
\family typewriter
AccelerometerListener
\family default
, and 
\family typewriter
onPause
\family default
 and 
\family typewriter
onResume
\family default
 methods, that realizes, respectively, unregistration and re-registration
 of 
\family typewriter
AccelerometerListener
\family default
, to optimize the resources' usage; another method defined in this class
 provides to update the GUI's objects with informations obtained from 
\family typewriter
AccelerometerListener
\family default
:
\end_layout

\begin_layout Standard

\color black
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Box ovalbox
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "77page%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

ShakerActivity.java
\end_layout

\begin_layout LyX-Code

\color black
\begin_inset listings
lstparams "basicstyle={\scriptsize\sffamily},comment={[l]{//}},commentstyle={\color{darkgreen}\ttfamily},emph={int, boolean, int, float, double, List,  Sensor, SensorManager, Context, Bundle, ArrayList, Activity, View, AdapterView, OnItemSelectedListener, ArrayAdapter, Spinner, TextView, simpleShaker, R, ImageView},emphstyle={\color{blue}},identifierstyle={\color{black}},keywords={typeof, new, true, false, catch, function, return, null, catch, switch, var, if, in, while, do, else, case, break, int, long, this, new},keywordstyle={\color{magenta}\bfseries},language=Java,morecomment={[s]{/*}{*/}},ndkeywords={class, export, @Override},ndkeywordstyle={\color{gray}\bfseries},sensitive=false,stringstyle={\color{red}\ttfamily},tabsize=4"
inline false
status open

\begin_layout LyX-Code

package it.unibo.android.accelerometer.simpleShaker;
\end_layout

\begin_layout LyX-Code

import it.unibo.android.accelerometer.simpleShaker.R;
\end_layout

\begin_layout LyX-Code

import android.app.Activity;
\end_layout

\begin_layout LyX-Code

import android.content.Context;
\end_layout

\begin_layout LyX-Code

import android.hardware.Sensor;
\end_layout

\begin_layout LyX-Code

import android.hardware.SensorManager;
\end_layout

\begin_layout LyX-Code

import android.os.Bundle;
\end_layout

\begin_layout LyX-Code

import android.view.View;
\end_layout

\begin_layout LyX-Code

import android.widget.ImageView;
\end_layout

\begin_layout LyX-Code

import android.widget.TextView;
\end_layout

\begin_layout LyX-Code

public class ShakerActivity extends Activity {
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	private SensorManager mSensorManager;
\end_layout

\begin_layout LyX-Code

    private Sensor mAccelerometer;
\end_layout

\begin_layout LyX-Code

    private AccelerometerListener mAccelerometerListener;
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

    private TextView textX;
\end_layout

\begin_layout LyX-Code

	private TextView textY;
\end_layout

\begin_layout LyX-Code

	private TextView textZ;
\end_layout

\begin_layout LyX-Code

	private ImageView iv;
\end_layout

\begin_layout LyX-Code

	private TextView textAcceleration;
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

    @Override
\end_layout

\begin_layout LyX-Code

    public void onCreate(Bundle savedInstanceState) {
\end_layout

\begin_layout LyX-Code

        super.onCreate(savedInstanceState);
\end_layout

\begin_layout LyX-Code

        setContentView(R.layout.shaker_main);
\end_layout

\begin_layout LyX-Code

		//obtain views' references
\end_layout

\begin_layout LyX-Code

		textX = (TextView)findViewById(R.id.acceleration_x);
\end_layout

\begin_layout LyX-Code

		textY = (TextView)findViewById(R.id.acceleration_y);
\end_layout

\begin_layout LyX-Code

		textZ = (TextView)findViewById(R.id.acceleration_z);
\end_layout

\begin_layout LyX-Code

		iv = (ImageView)findViewById(R.id.arrow);
\end_layout

\begin_layout LyX-Code

		textAcceleration = (TextView)findViewById(R.id.acceleration);
\end_layout

\begin_layout LyX-Code

		//obtain sensor manager and accelerometer
\end_layout

\begin_layout LyX-Code

        mSensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE)
;
\end_layout

\begin_layout LyX-Code

        mAccelerometer = mSensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER
);
\end_layout

\begin_layout LyX-Code

		//define and register accelerometer listener to sensor 
\end_layout

\begin_layout LyX-Code

        mAccelerometerListener = new AccelerometerListener(this);
\end_layout

\begin_layout LyX-Code

        mSensorManager.registerListener(mAccelerometerListener, 
\end_layout

\begin_layout LyX-Code

								mAccelerometer , SensorManager.SENSOR_DELAY_NORMAL); 
\end_layout

\begin_layout LyX-Code

	}
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	@Override
\end_layout

\begin_layout LyX-Code

	protected void onResume() {
\end_layout

\begin_layout LyX-Code

		super.onResume();
\end_layout

\begin_layout LyX-Code

		//re-register listener
\end_layout

\begin_layout LyX-Code

		mSensorManager.registerListener(mAccelerometerListener, 
\end_layout

\begin_layout LyX-Code

								mAccelerometer, SensorManager.SENSOR_DELAY_NORMAL);
\end_layout

\begin_layout LyX-Code

    }
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	@Override
\end_layout

\begin_layout LyX-Code

    protected void onPause() {
\end_layout

\begin_layout LyX-Code

		super.onPause();
\end_layout

\begin_layout LyX-Code

		//unregister listener
\end_layout

\begin_layout LyX-Code

        mSensorManager.unregisterListener(mAccelerometerListener);
\end_layout

\begin_layout LyX-Code

    }
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

...
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

\color black
\begin_inset Newpage clearpage
\end_inset


\begin_inset Box ovalbox
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "77page%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout LyX-Code

\color black
\begin_inset listings
lstparams "basicstyle={\scriptsize\sffamily},comment={[l]{//}},commentstyle={\color{darkgreen}\ttfamily},emph={int, boolean, int, float, double, List,  Sensor, SensorManager, Context, Bundle, ArrayList, Activity, View, AdapterView, OnItemSelectedListener, ArrayAdapter, Spinner, TextView, simpleShaker, R, ImageView},emphstyle={\color{blue}},identifierstyle={\color{black}},keywords={typeof, new, true, false, catch, function, return, null, catch, switch, var, if, in, while, do, else, case, break, int, long, this, new},keywordstyle={\color{magenta}\bfseries},language=Java,morecomment={[s]{/*}{*/}},ndkeywords={class, export, @Override},ndkeywordstyle={\color{gray}\bfseries},sensitive=false,stringstyle={\color{red}\ttfamily},tabsize=4"
inline false
status open

\begin_layout LyX-Code

...
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	//update view's elements
\end_layout

\begin_layout LyX-Code

    public void update(){
\end_layout

\begin_layout LyX-Code

		//sensors values
\end_layout

\begin_layout LyX-Code

    	textX.setText(mAccelerometerListener.getDeltaX());
\end_layout

\begin_layout LyX-Code

    	textY.setText(mAccelerometerListener.getDeltaY());
\end_layout

\begin_layout LyX-Code

    	textZ.setText(mAccelerometerListener.getDeltaZ());
\end_layout

\begin_layout LyX-Code

		//display direction arrow
\end_layout

\begin_layout LyX-Code

    	switch(mAccelerometerListener.getDirection()){
\end_layout

\begin_layout LyX-Code

			case 0:
\end_layout

\begin_layout LyX-Code

				iv.setVisibility(View.INVISIBLE);
\end_layout

\begin_layout LyX-Code

				break;
\end_layout

\begin_layout LyX-Code

			case 1:
\end_layout

\begin_layout LyX-Code

				iv.setImageResource(R.drawable.bottom);
\end_layout

\begin_layout LyX-Code

				iv.setVisibility(View.VISIBLE);
\end_layout

\begin_layout LyX-Code

				break;
\end_layout

\begin_layout LyX-Code

			case 2:
\end_layout

\begin_layout LyX-Code

				iv.setImageResource(R.drawable.top);
\end_layout

\begin_layout LyX-Code

				iv.setVisibility(View.VISIBLE);
\end_layout

\begin_layout LyX-Code

				break;
\end_layout

\begin_layout LyX-Code

			case 3:
\end_layout

\begin_layout LyX-Code

				iv.setImageResource(R.drawable.right);
\end_layout

\begin_layout LyX-Code

				iv.setVisibility(View.VISIBLE);
\end_layout

\begin_layout LyX-Code

				break;
\end_layout

\begin_layout LyX-Code

			case 4:
\end_layout

\begin_layout LyX-Code

				iv.setImageResource(R.drawable.left);
\end_layout

\begin_layout LyX-Code

				iv.setVisibility(View.VISIBLE);
\end_layout

\begin_layout LyX-Code

				break;
\end_layout

\begin_layout LyX-Code

		}
\end_layout

\begin_layout LyX-Code

		//show acceleration value
\end_layout

\begin_layout LyX-Code

    	textAcceleration.setText("Acceleration:" + 
\end_layout

\begin_layout LyX-Code

				mAccelerometerListener.getAcceleration() + " m/(s^2)" );
\end_layout

\begin_layout LyX-Code

	}
\end_layout

\begin_layout LyX-Code

}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subparagraph*
AccelerometerListener:
\end_layout

\begin_layout Standard
implements the SensorEventListener interfaces and only calls AccelerometerSuppor
t methods to update data (setData(event.values)) and, if they are up to date
 (information obtained by AccelerometerSupport.update() method), calls the
 activity update(AccelerometerSupport support):
\end_layout

\begin_layout Standard

\color black
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Box ovalbox
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "77page%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout Plain Layout

\family typewriter
\begin_inset space \qquad{}
\end_inset

AccelerometerListener.java
\end_layout

\begin_layout LyX-Code

\color black
\begin_inset listings
lstparams "basicstyle={\scriptsize\sffamily},comment={[l]{//}},commentstyle={\color{darkgreen}\ttfamily},emph={int, boolean, int, float, double, List,  Sensor, SensorManager, Context, Bundle, ArrayList, View, AdapterView, OnItemSelectedListener, ArrayAdapter, Spinner, TextView, R, ImageView, AccelerometerSupport, SensorEvent, SensorEventListener, ShakerActivity},emphstyle={\color{blue}},identifierstyle={\color{black}},keywords={typeof, new, true, false, catch, function, return, null, catch, switch, var, if, in, while, do, else, case, break, int, long, this, new},keywordstyle={\color{magenta}\bfseries},language=Java,morecomment={[s]{/*}{*/}},ndkeywords={class, export, @Override},ndkeywordstyle={\color{gray}\bfseries},sensitive=false,stringstyle={\color{red}\ttfamily},tabsize=4"
inline false
status open

\begin_layout LyX-Code

package it.unibo.android.accelerometer.simpleShaker;
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

import it.unibo.android.accelerometer.simpleShaker.utils.AccelerometerSupport;
\end_layout

\begin_layout LyX-Code

import android.hardware.Sensor;
\end_layout

\begin_layout LyX-Code

import android.hardware.SensorEvent;
\end_layout

\begin_layout LyX-Code

import android.hardware.SensorEventListener;
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

public class AccelerometerListener implements SensorEventListener{
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	private ShakerActivity activity;
\end_layout

\begin_layout LyX-Code

	private AccelerometerSupport support;
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	public AccelerometerListener(ShakerActivity activity){
\end_layout

\begin_layout LyX-Code

		this.activity = activity;
\end_layout

\begin_layout LyX-Code

		support = new AccelerometerSupport(); 
\end_layout

\begin_layout LyX-Code

	} 
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	@Override
\end_layout

\begin_layout LyX-Code

	public void onAccuracyChanged(Sensor sensor, int accuracy) {
\end_layout

\begin_layout LyX-Code

		// can be safely ignored for this demo
\end_layout

\begin_layout LyX-Code

	}
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

	@Override 
\end_layout

\begin_layout LyX-Code

	public void onSensorChanged(SensorEvent event) { 
\end_layout

\begin_layout LyX-Code

		//first update data using current values
\end_layout

\begin_layout LyX-Code

		support.setData(event.values);
\end_layout

\begin_layout LyX-Code

		//if the support class updates anything, update views
\end_layout

\begin_layout LyX-Code

		if (support.update())
\end_layout

\begin_layout LyX-Code

			activity.update(support);
\end_layout

\begin_layout LyX-Code

	}
\end_layout

\begin_layout LyX-Code

}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Subsection
Gyroscope, Uncalibrated Gyroscope and Rotation Vector Sensor
\end_layout

\begin_layout Standard
The gyroscope measures the rate of rotation in 
\begin_inset Formula $\nicefrac{rad}{s}$
\end_inset

 around the device's axis.
 
\end_layout

\begin_layout Standard
The following code shows how to get an instance of the default acceleration
 sensor:
\end_layout

\begin_layout Standard
\align center

\color black
\begin_inset Box ovalbox
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "77page%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout LyX-Code

\color black
\begin_inset listings
lstparams "basicstyle={\footnotesize\sffamily},comment={[l]{//}},commentstyle={\color{darkgreen}\ttfamily},emph={int, boolean, int, float, double, List,  Sensor, SensorManager, Context},emphstyle={\color{blue}},identifierstyle={\color{black}},keywords={typeof, new, true, false, catch, function, return, null, catch, switch, var, if, in, while, do, else, case, break, int, long, this, new},keywordstyle={\color{magenta}\bfseries},language=Java,morecomment={[s]{/*}{*/}},ndkeywords={class, export, throw, implements, import, this},ndkeywordstyle={\color{darkgray}\bfseries},sensitive=false,stringstyle={\color{red}\ttfamily},tabsize=4"
inline false
status open

\begin_layout LyX-Code

private SensorManager mSensorManager;
\end_layout

\begin_layout LyX-Code

private Sensor mSensor
\end_layout

\begin_layout LyX-Code

  ...
 
\end_layout

\begin_layout LyX-Code

mSensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);
\end_layout

\begin_layout LyX-Code

mSensor = mSensorManager.getDefaultSensor(Sensor.TYPE_GYROSCOPE);
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Standard gyroscopes provide raw rotational data without filtering or corrections
 for noise and drift.
 In practice, gyroscope noise and drift will introduce errors that need
 to be compensated (monitoring other sensors, such as gravity sensor or
 accelerometer, is possible to determinate drift and noise and apply the
 appropriate correction).
 This is necessary to obtain data without drift and noise errors is necessary
 filter the gyroscope's output.
 
\end_layout

\begin_layout Standard
An uncalibrated gyroscope, obtained with the following code
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard

\color black
\begin_inset Box ovalbox
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "c"
use_parbox 0
use_makebox 0
width "77page%"
special "none"
height "1in"
height_special "totalheight"
status collapsed

\begin_layout LyX-Code

\color black
\begin_inset listings
lstparams "basicstyle={\footnotesize\sffamily},comment={[l]{//}},commentstyle={\color{darkgreen}\ttfamily},emph={int, boolean, int, float, double, List,  Sensor, SensorManager, Context},emphstyle={\color{blue}},identifierstyle={\color{black}},keywords={typeof, new, true, false, catch, function, return, null, catch, switch, var, if, in, while, do, else, case, break, int, long, this, new},keywordstyle={\color{magenta}\bfseries},language=Java,morecomment={[s]{/*}{*/}},ndkeywords={class, export, throw, implements, import, this},ndkeywordstyle={\color{darkgray}\bfseries},sensitive=false,stringstyle={\color{red}\ttfamily},tabsize=4"
inline false
status open

\begin_layout LyX-Code

private SensorManager mSensorManager;
\end_layout

\begin_layout LyX-Code

private Sensor mSensor
\end_layout

\begin_layout LyX-Code

  ...
 
\end_layout

\begin_layout LyX-Code

mSensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);
\end_layout

\begin_layout LyX-Code

mSensor = mSensorManager.getDefaultSensor(Sensor.TYPE_GYROSCOPE_UNCALIBRATED);
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

is similar to the gyroscope, exept that no gyro-drift compensation is applied
 to the rate of rotation.
 It provides more raw results that may include some bias: their measurements
 contain fewer jumps because there are no corrections applied through calibratio
n.
 Some application, may prefer this results as smoother and more reliable,
 for example if the application is attempting to conduct its own sensor
 fusion
\begin_inset Foot
status open

\begin_layout Plain Layout

\color black
combining more sensors' data to obtain some result
\end_layout

\end_inset

 the calibration can actually distort results.
\end_layout

\begin_layout Standard
The 
\family typewriter
uncalibrated_event.values
\family default
 array contains 6 elements the first three represents the rotation rate
 along each axis, the seconds contains the estimated drift around each axis
 and,
\color black
 in general, is possible to define that
\begin_inset Formula 
\[
calibrated_{x}\cong uncalibrated_{x}-bias_{x}
\]

\end_inset

for example, the gyroscope x value (
\family typewriter
gyroscope_event.values[0])
\family default
 will be close to 
\family typewriter
uncalibrated_gyroscope_event.values[0] - uncalibrated_gyroscope_event.values[3]
\family default
.
\end_layout

\begin_layout Subsubsection*
Coordinate system
\end_layout

\begin_layout Standard
The gyroscope's coordinate sysetm is the same as the one used for the accelerome
ter.
 Rotation is positive in the counter-clockwise direction: assuming an observer
 on some positive location of each axis that looks toward the origin, if
 the device appeared to be rotating counter-clockwise the sensor report
 a positive rotation.
 Another definition can be obtained by the right-hand grip rule
\begin_inset CommandInset citation
LatexCommand cite
key "righthand"

\end_inset

 (or clockscrew-rule): gripping a device's axis, with the extended thumb
 that points in the direction of the axis, if the device rotates in counter-cloc
kwise direction, the rotation value is positive.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Caption

\begin_layout Plain Layout
Sensor coordinate system
\begin_inset CommandInset citation
LatexCommand cite
key "intelDev"

\end_inset


\end_layout

\end_inset


\begin_inset Graphics
	filename img/RightHandRule copy.jpg
	lyxscale 30
	width 30page%

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Position Sensors
\begin_inset CommandInset label
LatexCommand label
name "sec:positionSensors"

\end_inset


\end_layout

\begin_layout Section
Environment Sensors
\end_layout

\begin_layout Subsubsection*
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "androidDev"

\end_inset

Android Developer, "Sensors Overview", http://developer.android.com/guide/topics/s
ensors/sensors_overview.htm
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "intelDev"

\end_inset

Intel, 
\begin_inset Quotes eld
\end_inset

Sviluppo di applicazioni per i sensori di telefoni e tablet Android basati
 su processore Intel Atom
\begin_inset Quotes erd
\end_inset

, http://
\begin_inset Newline newline
\end_inset

software.intel.com/it-it/articles/developing-sensor-applications-on-intel-atom-pro
cessor-based-android-phones-and-tablets
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
label "3"
key "righthand"

\end_inset

Wikipedia, "Right-hand rule", http://en.wikipedia.org/wiki/Right-hand
\backslash
_{}rule
\backslash
#{}Direction
\backslash
_{}associated
\backslash
_{}with
\backslash
_{}a
\backslash
_{}rotation
\end_layout

\end_body
\end_document
